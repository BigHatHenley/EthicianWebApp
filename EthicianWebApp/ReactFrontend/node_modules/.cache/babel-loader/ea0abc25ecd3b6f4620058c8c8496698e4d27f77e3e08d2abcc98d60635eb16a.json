{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hat\\\\Documents\\\\Work Stuff\\\\EthicianWebApp\\\\ReactFrontend\\\\src\\\\components\\\\MultiChatXpertPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './MultiChatXpertPage.css';\nimport userImage from './images/Chips.png';\nimport aiImage from './images/BreachHours.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MultiChatXpertPage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isTTSOpen, setTTSOpen] = useState(false);\n  const [isSpeechRecognitionOpen, setSpeechRecognitionOpen] = useState(false);\n  const [isLLMSelectionOpen, setLLMSelectionOpen] = useState(false);\n  const [isUpdateExpertsOpen, setUpdateExpertsOpen] = useState(false);\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\n  const [isConversationHistoryOpen, setConversationHistoryOpen] = useState(false);\n  const [volume, setVolume] = useState(50); // Default volume for TTS\n  const [experts, setExperts] = useState([\"Computer Engineer\", \"Mechanical Engineer\", \"Ethical AI Expert\"]);\n  const [selectedExpert, setSelectedExpert] = useState(null);\n  const openPopup = setting => {\n    setTTSOpen(false);\n    setSpeechRecognitionOpen(false);\n    setLLMSelectionOpen(false);\n    setUpdateExpertsOpen(false);\n    setConversationHistoryOpen(false);\n    if (setting === \"TTS\") setTTSOpen(true);\n    if (setting === \"SpeechRecognition\") setSpeechRecognitionOpen(true);\n    if (setting === \"LLMSelection\") setLLMSelectionOpen(true);\n    if (setting === \"UpdateExperts\") setUpdateExpertsOpen(true);\n    if (setting === \"Conversation History\") setConversationHistoryOpen(true);\n  };\n  const selectExpert = expert => {\n    setSelectedExpert(expert);\n    setExpertPopupOpen(false); // Close popup once expert is selected\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-ui-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-image\",\n        onClick: () => setExpertPopupOpen(true),\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: aiImage,\n          alt: \"AI Expert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"console-container\",\n      children: /*#__PURE__*/_jsxDEV(Console, {\n        openPopup: openPopup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-container\",\n      children: /*#__PURE__*/_jsxDEV(UserIconPopup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-container\",\n      children: /*#__PURE__*/_jsxDEV(ConversationWindow, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-box-container\",\n      children: /*#__PURE__*/_jsxDEV(InputSection, {\n        onPromptSubmit: prompt => {\n          const newMessage = {\n            text: prompt,\n            isUser: true\n          };\n          setMessages([...messages, newMessage]);\n        },\n        onFileUpload: file => console.log('File uploaded:', file.name),\n        onCopyConversation: () => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isExpertPopupOpen && /*#__PURE__*/_jsxDEV(ExpertPopup, {\n      experts: experts,\n      onSelectExpert: selectExpert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), isTTSOpen && /*#__PURE__*/_jsxDEV(TextToSpeechPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }, this), isSpeechRecognitionOpen && /*#__PURE__*/_jsxDEV(SpeechRecognitionPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 35\n    }, this), isLLMSelectionOpen && /*#__PURE__*/_jsxDEV(LLMSelectionPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 30\n    }, this), isUpdateExpertsOpen && /*#__PURE__*/_jsxDEV(UpdateExpertsPopup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 31\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n// Define Console Component with Option Cycling\n_s(MultiChatXpertPage, \"W9yiaQfiNl0+lrnqLBQMigzxU2E=\");\n_c = MultiChatXpertPage;\nfunction Console({\n  openPopup,\n  volume,\n  setVolume\n}) {\n  _s2();\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation History\"];\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\n  const handleScroll = direction => {\n    if (direction === 'up') {\n      setCurrentOptionIndex(prev => prev === 0 ? options.length - 1 : prev - 1);\n    } else {\n      setCurrentOptionIndex(prev => prev === options.length - 1 ? 0 : prev + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"console-display\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-option\",\n        children: options[currentOptionIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScroll('up'),\n      className: \"up-arrow\",\n      children: \"\\u25B2\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => openPopup(options[currentOptionIndex]),\n      children: \"Select\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleScroll('down'),\n      className: \"down-arrow\",\n      children: \"\\u25BC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"volume-slider-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"volume-slider\",\n        className: \"volume-label\",\n        children: \"TTS Volume\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        id: \"volume-slider\",\n        min: \"0\",\n        max: \"100\",\n        value: volume,\n        onChange: e => setVolume(Number(e.target.value)),\n        className: \"volume-slider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Current Volume: \", volume]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n\n// Define ExpertPopup Component\n_s2(Console, \"M38tHdikBduzhFjdEwynwtecurg=\");\n_c2 = Console;\nfunction ExpertPopup({\n  experts,\n  onSelectExpert\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup expert-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Select AI Expert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), experts.map((expert, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSelectExpert(expert),\n      className: \"expert-option\",\n      children: expert\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onSelectExpert(null),\n      children: \"Cancel\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n}\n\n// Define UserIconPopup Component\n_c3 = ExpertPopup;\nfunction UserIconPopup() {\n  const handleFileChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      console.log('User icon changed to:', file.name);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-icon-popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"user-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: userImage,\n        alt: \"User Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"icon-upload\",\n      accept: \"image/*\",\n      onChange: handleFileChange,\n      style: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 5\n  }, this);\n}\n\n// Define ConversationWindow Component with Auto-Scrolling\n_c4 = UserIconPopup;\nfunction ConversationWindow({\n  messages\n}) {\n  _s3();\n  const conversationRef = useRef(null);\n\n  // Auto-scroll to the bottom of the conversation when new messages are added\n  useEffect(() => {\n    if (conversationRef.current) {\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-window\",\n    ref: conversationRef,\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n\n// Define InputSection Component with Expanding Entry Box\n_s3(ConversationWindow, \"Y7nFwtZO/hlnq7te7GKq0r5Z7DM=\");\n_c5 = ConversationWindow;\nfunction InputSection({\n  onPromptSubmit,\n  onFileUpload,\n  onCopyConversation\n}) {\n  _s4();\n  const [prompt, setPrompt] = useState(\"\");\n  const handleInputChange = e => {\n    setPrompt(e.target.value);\n\n    // Adjust height only if content exceeds the current visible area\n    e.target.style.height = \"auto\"; // Reset height to auto to calculate new height\n    if (e.target.scrollHeight > e.target.clientHeight) {\n      e.target.style.height = `${e.target.scrollHeight}px`; // Expand based on content\n    }\n  };\n  const handleFileUpload = e => {\n    if (e.target.files.length > 0) {\n      onFileUpload(e.target.files[0]);\n    }\n  };\n  const handleBlur = e => {\n    if (prompt === \"\") {\n      e.target.style.height = \"20px\"; // Only shrink to 20px if there's no content\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: prompt,\n      onChange: handleInputChange,\n      onBlur: handleBlur,\n      className: \"prompt-input\",\n      placeholder: \"Type your message here...\",\n      rows: 1,\n      style: {\n        height: \"20px\"\n      } // Set default height to 20px\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPromptSubmit(prompt),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCopyConversation,\n      children: \"Copy Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => document.getElementById('file-upload').click(),\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-upload\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 213,\n    columnNumber: 5\n  }, this);\n}\n\n// Additional Popup Components (Text-to-Speech, Speech Recognition, LLM Selection, Update Experts)\n_s4(InputSection, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n_c6 = InputSection;\nfunction TextToSpeechPopup() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Text-To-Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('TTS Enabled'),\n      children: \"Enable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('TTS Disabled'),\n      children: \"Disable\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 5\n  }, this);\n}\n_c7 = TextToSpeechPopup;\nfunction SpeechRecognitionPopup() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Speech Recognition\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Start Recording'),\n      children: \"Record Speech\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Check Recording'),\n      children: \"Check Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Exit Recording'),\n      children: \"Exit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 5\n  }, this);\n}\n_c8 = SpeechRecognitionPopup;\nfunction LLMSelectionPopup() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"LLM Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('ChatGPT Selected'),\n      children: \"ChatGPT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Google Gemini Selected'),\n      children: \"Google Gemini\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => console.log('Anthropic Claude Selected'),\n      children: \"Anthropic Claude\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 255,\n    columnNumber: 5\n  }, this);\n}\n_c9 = LLMSelectionPopup;\nfunction UpdateExpertsPopup() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Update Experts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 5\n  }, this);\n}\n_c10 = UpdateExpertsPopup;\nfunction ConversationHistoryPopup() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"popup\",\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Conversation History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n_c11 = ConversationHistoryPopup;\nexport default MultiChatXpertPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"MultiChatXpertPage\");\n$RefreshReg$(_c2, \"Console\");\n$RefreshReg$(_c3, \"ExpertPopup\");\n$RefreshReg$(_c4, \"UserIconPopup\");\n$RefreshReg$(_c5, \"ConversationWindow\");\n$RefreshReg$(_c6, \"InputSection\");\n$RefreshReg$(_c7, \"TextToSpeechPopup\");\n$RefreshReg$(_c8, \"SpeechRecognitionPopup\");\n$RefreshReg$(_c9, \"LLMSelectionPopup\");\n$RefreshReg$(_c10, \"UpdateExpertsPopup\");\n$RefreshReg$(_c11, \"ConversationHistoryPopup\");","map":{"version":3,"names":["React","useState","useEffect","useRef","userImage","aiImage","jsxDEV","_jsxDEV","MultiChatXpertPage","_s","messages","setMessages","isTTSOpen","setTTSOpen","isSpeechRecognitionOpen","setSpeechRecognitionOpen","isLLMSelectionOpen","setLLMSelectionOpen","isUpdateExpertsOpen","setUpdateExpertsOpen","isExpertPopupOpen","setExpertPopupOpen","isConversationHistoryOpen","setConversationHistoryOpen","volume","setVolume","experts","setExperts","selectedExpert","setSelectedExpert","openPopup","setting","selectExpert","expert","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Console","UserIconPopup","ConversationWindow","InputSection","onPromptSubmit","prompt","newMessage","text","isUser","onFileUpload","file","console","log","name","onCopyConversation","navigator","clipboard","writeText","map","m","join","ExpertPopup","onSelectExpert","TextToSpeechPopup","SpeechRecognitionPopup","LLMSelectionPopup","UpdateExpertsPopup","_c","_s2","options","currentOptionIndex","setCurrentOptionIndex","handleScroll","direction","prev","length","htmlFor","type","id","min","max","value","onChange","e","Number","target","_c2","index","_c3","handleFileChange","files","accept","style","display","_c4","_s3","conversationRef","current","scrollTop","scrollHeight","ref","message","_c5","_s4","setPrompt","handleInputChange","height","clientHeight","handleFileUpload","handleBlur","onBlur","placeholder","rows","document","getElementById","click","_c6","_c7","_c8","_c9","_c10","ConversationHistoryPopup","_c11","$RefreshReg$"],"sources":["C:/Users/Hat/Documents/Work Stuff/EthicianWebApp/ReactFrontend/src/components/MultiChatXpertPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './MultiChatXpertPage.css';\r\nimport userImage from './images/Chips.png'\r\nimport aiImage from './images/BreachHours.jpg'\r\n\r\nfunction MultiChatXpertPage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isTTSOpen, setTTSOpen] = useState(false);\r\n  const [isSpeechRecognitionOpen, setSpeechRecognitionOpen] = useState(false);\r\n  const [isLLMSelectionOpen, setLLMSelectionOpen] = useState(false);\r\n  const [isUpdateExpertsOpen, setUpdateExpertsOpen] = useState(false);\r\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\r\n  const [isConversationHistoryOpen, setConversationHistoryOpen] = useState(false);\r\n  const [volume, setVolume] = useState(50); // Default volume for TTS\r\n  const [experts, setExperts] = useState([\r\n    \"Computer Engineer\", \"Mechanical Engineer\", \"Ethical AI Expert\"\r\n  ]);\r\n  const [selectedExpert, setSelectedExpert] = useState(null);\r\n\r\n  const openPopup = (setting) => {\r\n    setTTSOpen(false);\r\n    setSpeechRecognitionOpen(false);\r\n    setLLMSelectionOpen(false);\r\n    setUpdateExpertsOpen(false);\r\n    setConversationHistoryOpen(false);\r\n\r\n    \r\n    if (setting === \"TTS\") setTTSOpen(true);\r\n    if (setting === \"SpeechRecognition\") setSpeechRecognitionOpen(true);\r\n    if (setting === \"LLMSelection\") setLLMSelectionOpen(true);\r\n    if (setting === \"UpdateExperts\") setUpdateExpertsOpen(true);\r\n    if (setting === \"Conversation History\") setConversationHistoryOpen(true);\r\n  };\r\n\r\n  const selectExpert = (expert) => {\r\n    setSelectedExpert(expert);\r\n    setExpertPopupOpen(false); // Close popup once expert is selected\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-ui-container\">\r\n      {/* AI Image Container */}\r\n      <div className=\"ai-container\">\r\n        <button className=\"ai-image\" onClick={() => setExpertPopupOpen(true)}>\r\n          <img src={aiImage} alt=\"AI Expert\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* Console Container */}\r\n      <div className=\"console-container\">\r\n        <Console openPopup={openPopup} />\r\n      </div>\r\n\r\n      {/* User Image Container */}\r\n      <div className=\"user-container\">\r\n        <UserIconPopup />\r\n      </div>\r\n\r\n      {/* Conversation Window Container */}\r\n      <div className=\"conversation-container\">\r\n        <ConversationWindow messages={messages} />\r\n      </div>\r\n\r\n      {/* Entry Box Container */}\r\n      <div className=\"entry-box-container\">\r\n        <InputSection\r\n          onPromptSubmit={(prompt) => {\r\n            const newMessage = { text: prompt, isUser: true };\r\n            setMessages([...messages, newMessage]);\r\n          }}\r\n          onFileUpload={(file) => console.log('File uploaded:', file.name)}\r\n          onCopyConversation={() => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))}\r\n        />\r\n      </div>\r\n\r\n      {/* Expert Popup */}\r\n      {isExpertPopupOpen && (\r\n        <ExpertPopup experts={experts} onSelectExpert={selectExpert} />\r\n      )}\r\n\r\n      {/* Additional Popups */}\r\n      {isTTSOpen && <TextToSpeechPopup />}\r\n      {isSpeechRecognitionOpen && <SpeechRecognitionPopup />}\r\n      {isLLMSelectionOpen && <LLMSelectionPopup />}\r\n      {isUpdateExpertsOpen && <UpdateExpertsPopup />}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define Console Component with Option Cycling\r\nfunction Console({ openPopup, volume, setVolume }) {\r\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation History\"];\r\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\r\n\r\n  const handleScroll = (direction) => {\r\n    if (direction === 'up') {\r\n      setCurrentOptionIndex((prev) => (prev === 0 ? options.length - 1 : prev - 1));\r\n    } else {\r\n      setCurrentOptionIndex((prev) => (prev === options.length - 1 ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"console\">\r\n      <div className=\"console-display\">\r\n        <div className=\"console-option\">{options[currentOptionIndex]}</div>\r\n      </div>\r\n      <button onClick={() => handleScroll('up')} className=\"up-arrow\">▲</button>\r\n      <button onClick={() => openPopup(options[currentOptionIndex])}>Select</button>\r\n      <button onClick={() => handleScroll('down')} className=\"down-arrow\">▼</button>\r\n\r\n      {/* Volume Slider for TTS */}\r\n      <div className=\"volume-slider-container\">\r\n          <label htmlFor=\"volume-slider\" className=\"volume-label\">TTS Volume</label>\r\n          <input\r\n            type=\"range\"\r\n            id=\"volume-slider\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={volume}\r\n            onChange={(e) => setVolume(Number(e.target.value))}\r\n            className=\"volume-slider\"\r\n          />\r\n           <p>Current Volume: {volume}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define ExpertPopup Component\r\nfunction ExpertPopup({ experts, onSelectExpert }) {\r\n  return (\r\n    <div className=\"popup expert-popup\">\r\n      <h3>Select AI Expert</h3>\r\n      {experts.map((expert, index) => (\r\n        <button key={index} onClick={() => onSelectExpert(expert)} className=\"expert-option\">\r\n          {expert}\r\n        </button>\r\n      ))}\r\n      <button onClick={() => onSelectExpert(null)}>Cancel</button>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define UserIconPopup Component\r\nfunction UserIconPopup() {\r\n  const handleFileChange = (e) => {\r\n    const file = e.target.files[0];\r\n    if (file) {\r\n      console.log('User icon changed to:', file.name);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"user-icon-popup\">\r\n      <button className=\"user-image\">\r\n        <img src={userImage} alt=\"User Icon\" />\r\n      </button>\r\n      <input type=\"file\" id=\"icon-upload\" accept=\"image/*\" onChange={handleFileChange} style={{ display: 'none' }} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define ConversationWindow Component with Auto-Scrolling\r\nfunction ConversationWindow({ messages }) {\r\n  const conversationRef = useRef(null);\r\n\r\n  // Auto-scroll to the bottom of the conversation when new messages are added\r\n  useEffect(() => {\r\n    if (conversationRef.current) {\r\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-window\" ref={conversationRef}>\r\n      {messages.map((message, index) => (\r\n        <div key={index} className={`message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`}>\r\n          <p>{message.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Define InputSection Component with Expanding Entry Box\r\nfunction InputSection({ onPromptSubmit, onFileUpload, onCopyConversation }) {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setPrompt(e.target.value);\r\n    \r\n    // Adjust height only if content exceeds the current visible area\r\n    e.target.style.height = \"auto\";  // Reset height to auto to calculate new height\r\n    if (e.target.scrollHeight > e.target.clientHeight) {\r\n      e.target.style.height = `${e.target.scrollHeight}px`;  // Expand based on content\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      onFileUpload(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    if (prompt === \"\") {\r\n      e.target.style.height = \"20px\";  // Only shrink to 20px if there's no content\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-section\">\r\n      <textarea\r\n        value={prompt}\r\n        onChange={handleInputChange}\r\n        onBlur={handleBlur}\r\n        className=\"prompt-input\"\r\n        placeholder=\"Type your message here...\"\r\n        rows={1}\r\n        style={{ height: \"20px\" }}  // Set default height to 20px\r\n      />\r\n      <button onClick={() => onPromptSubmit(prompt)}>Submit</button>\r\n      <button onClick={onCopyConversation}>Copy Conversation</button>\r\n      <button onClick={() => document.getElementById('file-upload').click()}>Upload File</button>\r\n      <input type=\"file\" id=\"file-upload\" style={{ display: 'none' }} onChange={handleFileUpload} />\r\n    </div>\r\n  );\r\n}\r\n\r\n// Additional Popup Components (Text-to-Speech, Speech Recognition, LLM Selection, Update Experts)\r\nfunction TextToSpeechPopup() {\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>Text-To-Speech</h3>\r\n      <button onClick={() => console.log('TTS Enabled')}>Enable</button>\r\n      <button onClick={() => console.log('TTS Disabled')}>Disable</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction SpeechRecognitionPopup() {\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>Speech Recognition</h3>\r\n      <button onClick={() => console.log('Start Recording')}>Record Speech</button>\r\n      <button onClick={() => console.log('Check Recording')}>Check Recording</button>\r\n      <button onClick={() => console.log('Exit Recording')}>Exit</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction LLMSelectionPopup() {\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>LLM Selection</h3>\r\n      <button onClick={() => console.log('ChatGPT Selected')}>ChatGPT</button>\r\n      <button onClick={() => console.log('Google Gemini Selected')}>Google Gemini</button>\r\n      <button onClick={() => console.log('Anthropic Claude Selected')}>Anthropic Claude</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction UpdateExpertsPopup() {\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>Update Experts</h3>\r\n      {/* Render buttons and expert updating UI here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction ConversationHistoryPopup() {\r\n  return (\r\n    <div className=\"popup\">\r\n      <h3>Conversation History</h3>\r\n      {/* Render Conversation History and Selection In Console Here */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiChatXpertPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}