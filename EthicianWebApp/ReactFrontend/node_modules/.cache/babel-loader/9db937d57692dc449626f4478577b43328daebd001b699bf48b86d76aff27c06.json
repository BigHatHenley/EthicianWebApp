{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hat\\\\Documents\\\\Work Stuff\\\\EthicianWebApp\\\\ReactFrontend\\\\src\\\\components\\\\FileExplorer.js\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileExplorer = /*#__PURE__*/_s(/*#__PURE__*/React.forwardRef(_c = _s(({\n  onFileSelect\n}, ref) => {\n  _s();\n  const onDrop = useCallback(acceptedFiles => {\n    onFileSelect(acceptedFiles);\n  }, [onFileSelect]);\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    multiple: false\n  });\n  const openFileDialog = () => {\n    getInputProps().onClick(); // Open the file dialog\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ...getRootProps({\n      className: `dropzone ${isDragActive ? 'active' : ''}`\n    }),\n    onClick: openFileDialog // Allow clicking anywhere on the dropzone to open file dialog\n    ,\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      ...getInputProps(),\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}, \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n})), \"yd//yJtVY5DqPYzQY0xGsdgoRlk=\", false, function () {\n  return [useDropzone];\n});\n_c2 = FileExplorer;\nexport default FileExplorer;\nvar _c, _c2;\n$RefreshReg$(_c, \"FileExplorer$React.forwardRef\");\n$RefreshReg$(_c2, \"FileExplorer\");","map":{"version":3,"names":["React","useCallback","useDropzone","jsxDEV","_jsxDEV","FileExplorer","_s","forwardRef","_c","onFileSelect","ref","onDrop","acceptedFiles","getRootProps","getInputProps","isDragActive","multiple","openFileDialog","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["C:/Users/Hat/Documents/Work Stuff/EthicianWebApp/ReactFrontend/src/components/FileExplorer.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\n\r\nconst FileExplorer = React.forwardRef(({ onFileSelect }, ref) => {\r\n  const onDrop = useCallback((acceptedFiles) => {\r\n    onFileSelect(acceptedFiles);\r\n  }, [onFileSelect]);\r\n\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\r\n    onDrop,\r\n    multiple: false,\r\n  });\r\n\r\n  const openFileDialog = () => {\r\n    getInputProps().onClick(); // Open the file dialog\r\n  };\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps({\r\n        className: `dropzone ${isDragActive ? 'active' : ''}`,\r\n      })}\r\n      onClick={openFileDialog} // Allow clicking anywhere on the dropzone to open file dialog\r\n    >\r\n      <input {...getInputProps()} ref={ref} />\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default FileExplorer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,SAASC,WAAW,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,YAAY,gBAAAC,EAAA,cAAGN,KAAK,CAACO,UAAU,CAAAC,EAAA,GAAAF,EAAA,CAAC,CAAC;EAAEG;AAAa,CAAC,EAAEC,GAAG,KAAK;EAAAJ,EAAA;EAC/D,MAAMK,MAAM,GAAGV,WAAW,CAAEW,aAAa,IAAK;IAC5CH,YAAY,CAACG,aAAa,CAAC;EAC7B,CAAC,EAAE,CAACH,YAAY,CAAC,CAAC;EAElB,MAAM;IAAEI,YAAY;IAAEC,aAAa;IAAEC;EAAa,CAAC,GAAGb,WAAW,CAAC;IAChES,MAAM;IACNK,QAAQ,EAAE;EACZ,CAAC,CAAC;EAEF,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BH,aAAa,CAAC,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7B,CAAC;EAED,oBACEd,OAAA;IAAA,GACMS,YAAY,CAAC;MACfM,SAAS,EAAE,YAAYJ,YAAY,GAAG,QAAQ,GAAG,EAAE;IACrD,CAAC,CAAC;IACFG,OAAO,EAAED,cAAe,CAAC;IAAA;IAAAG,QAAA,eAEzBhB,OAAA;MAAA,GAAWU,aAAa,CAAC,CAAC;MAAEJ,GAAG,EAAEA;IAAI;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrC,CAAC;AAEV,CAAC;EAAA,QAnBuDtB,WAAW;AAAA,EAmBlE,CAAC;EAAA,QAnBsDA,WAAW;AAAA,EAmBjE;AAACuB,GAAA,GAxBGpB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAG,EAAA,EAAAiB,GAAA;AAAAC,YAAA,CAAAlB,EAAA;AAAAkB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}