{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hat\\\\Documents\\\\Work Stuff\\\\EthicianWebApp\\\\ReactFrontend\\\\src\\\\components\\\\MultiChatXpertPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './MultiChatXpertPage.css';\nimport userImage from './images/personTyping.gif';\nimport aiImage from './images/AILooking.gif';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MultiChatXpertPage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isTTSEnabled, setTTSEnabled] = useState(false);\n  const [isSpeechRecognitionOpen, setSpeechRecognitionOpen] = useState(false);\n  const [isLLMSelectionOpen, setLLMSelectionOpen] = useState(false);\n  const [isUpdateExpertsOpen, setUpdateExpertsOpen] = useState(false);\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\n  const [experts, setExperts] = useState([\"Ethician\", \"Mechanical Engineer\", \"Metallurgist\", \"Safety Engineer\", \"Materials Engineer\", \"Robotics Engineer\", \"Electrical Engineer\", \"Civil Engineer\", \"Software Engineer\", \"Chemical Engineer\", \"Aerospace Engineer\", \"Petroleum Engineer\", \"Biomedical Engineer\", \"Environment Engineer\", \"Quality Engineer\"]);\n  const [selectedExperts, setSelectedExperts] = useState([]);\n  const [currentLLM, setCurrentLLM] = useState(null);\n  const [showEditPopup, setShowEditPopup] = useState(false); // Track if edit popup is open\n  const [currentExpertEdit, setCurrentExpertEdit] = useState(null); // Track current expert to edit\n  const [newExpertName, setNewExpertName] = useState(\"\"); // Track new expert name input\n  // State for toggling expert selection\n  const [expertToggles, setExpertToggles] = useState(Array(15).fill(false));\n  const [prompt, setPrompt] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n  const [volume, setVolume] = useState(50); // Volume state\n\n  // Check if the browser supports speech recognition\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = SpeechRecognition ? new SpeechRecognition() : null;\n  const [transcript, setTranscript] = useState(\"\");\n  const [error, setError] = useState(null);\n  if (recognition) {\n    recognition.continuous = true;\n    recognition.interimResults = true;\n    recognition.lang = 'en-US';\n    recognition.onresult = event => {\n      let interimTranscript = \"\";\n      for (let i = event.resultIndex; i < event.results.length; i++) {\n        const transcriptPart = event.results[i][0].transcript;\n        if (event.results[i].isFinal) {\n          setTranscript(prev => prev + \" \" + transcriptPart);\n          setPrompt(prev => prev + \" \" + transcriptPart); // Update prompt with final transcript\n          console.log(\"Final Transcript:\", transcriptPart); // Log final transcript part\n        } else {\n          interimTranscript += transcriptPart;\n        }\n      }\n      setPrompt(interimTranscript); // Display interim transcript in the entry bar\n      console.log(\"Interim Transcript:\", interimTranscript); // Log interim transcript\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n      setError(`Error: ${event.error}`);\n      setIsListening(false);\n    };\n    recognition.onend = () => {\n      console.log(\"Speech recognition ended.\"); // Log when recognition ends\n      setIsListening(false);\n    };\n  }\n  const handleStartListening = () => {\n    if (recognition && !isListening) {\n      setPrompt(\"\"); // Clear any previous text\n      setIsListening(true);\n      setError(null); // Clear any previous errors\n      console.log(\"Starting Speech Recognition\"); // Log start action\n      recognition.start();\n    }\n  };\n  const handleStopListening = () => {\n    if (recognition && isListening) {\n      setIsListening(false);\n      recognition.stop();\n      console.log(\"Stopped Speech Recognition\"); // Log stop action\n    }\n  };\n  const handlePromptSubmit = () => {\n    const newMessage = {\n      text: prompt,\n      isUser: true\n    };\n    setMessages([...messages, newMessage]);\n    handleSendMessage(prompt);\n    setPrompt(\"\");\n  };\n  const openPopup = setting => {\n    setTTSEnabled(false);\n    setSpeechRecognitionOpen(false);\n    setLLMSelectionOpen(false);\n    setUpdateExpertsOpen(false);\n    if (setting === \"TTS\") setTTSEnabled(true);\n    if (setting === \"SpeechRecognition\") setSpeechRecognitionOpen(true);\n    if (setting === \"LLMSelection\") setLLMSelectionOpen(true);\n    if (setting === \"UpdateExperts\") setUpdateExpertsOpen(true);\n  };\n\n  // Function to toggle TTS setting\n  const toggleTTS = () => {\n    setTTSEnabled(!isTTSEnabled);\n    console.log(\"TTS Enabled:\", !isTTSEnabled); // Log for confirmation\n  };\n  const toggleExpertPopup = () => {\n    setExpertPopupOpen(!isExpertPopupOpen);\n  };\n  const updateExpertName = (index, newName) => {\n    const updatedExperts = [...experts];\n    updatedExperts[index] = newName;\n    setExperts(updatedExperts);\n  };\n\n  // Function to handle expert selection in the AI Image popup\n  const handleExpertSelection = expert => {\n    setSelectedExperts(prevExperts => {\n      const updatedExperts = prevExperts.includes(expert) ? prevExperts.filter(e => e !== expert) : [...prevExperts, expert];\n      console.log(\"Updated selectedExperts:\", updatedExperts); // Log after update\n      return updatedExperts;\n    });\n  };\n  const handleLLMSelection = llm => {\n    setCurrentLLM(llm);\n    console.log(\"Updated currentLLM:\", llm); // Log after update\n  };\n  const handleEditExpertClick = index => {\n    setCurrentExpertEdit(index);\n    setNewExpertName(experts[index]);\n    setShowEditPopup(true);\n  };\n  const handleSaveExpertName = () => {\n    const updatedExperts = [...experts];\n    updatedExperts[currentExpertEdit] = newExpertName;\n    setExperts(updatedExperts);\n    setShowEditPopup(false);\n  };\n  function getCsrfToken() {\n    const name = 'csrftoken';\n    const cookies = document.cookie.split(';');\n    for (let cookie of cookies) {\n      cookie = cookie.trim();\n      if (cookie.startsWith(name + '=')) {\n        return cookie.substring(name.length + 1);\n      }\n    }\n    return null;\n  }\n  const handleSendMessage = async message => {\n    try {\n      console.log(\"Sending message with currentLLM:\", currentLLM); // Confirm currentLLM\n      console.log(\"Sending message with selectedExperts:\", selectedExperts); // Confirm selectedExperts\n\n      const response = await axios.post('https://bada-2601-702-0-9480-e902-94e6-a4ed-8872.ngrok-free.app/api/analyze_text/', {\n        text: message,\n        selected_experts: selectedExperts,\n        selected_option: currentLLM\n      }, {\n        headers: {\n          'X-CSRFToken': getCsrfToken()\n        },\n        withCredentials: true\n      });\n      const aiText = response.data.output || \"No response from AI\";\n      const aiResponse = {\n        text: aiText,\n        isUser: false\n      };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n      if (isTTSEnabled) {\n        speakText(aiText, volume / 100);\n      }\n    } catch (error) {\n      console.error('Error sending message to backend:', error);\n    }\n  };\n\n  // Ensure `speakText` uses the specified volume\n  const speakText = (text, volumeLevel = 0.5) => {\n    if ('speechSynthesis' in window) {\n      const utterance = new SpeechSynthesisUtterance(text);\n      utterance.volume = volumeLevel; // Volume adjusted here\n      window.speechSynthesis.speak(utterance);\n    } else {\n      console.warn(\"TTS not supported in this browser\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-ui-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-image\",\n        onClick: toggleExpertPopup,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: aiImage,\n          alt: \"AI Expert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), isExpertPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Experts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expert-grid\",\n        children: experts.map((expert, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleExpertSelection(expert),\n          className: `expert-button ${selectedExperts.includes(expert) ? 'selected' : ''}`,\n          children: expert\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleExpertPopup,\n        className: \"close-popup-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"console-container\",\n      children: /*#__PURE__*/_jsxDEV(Console, {\n        experts: experts,\n        handleEditExpertClick: handleEditExpertClick,\n        volume: volume,\n        setVolume: setVolume,\n        handleStartSpeechRecognition: handleStartListening,\n        handleStopSpeechRecognition: handleStopListening,\n        isListening: isListening,\n        handleLLMSelection: handleLLMSelection // Pass handleLLMSelection to Console\n        ,\n        currentLLM: currentLLM,\n        toggleTTS: toggleTTS,\n        isTTSEnabled: isTTSEnabled\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImage,\n          alt: \"User Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-container\",\n      children: /*#__PURE__*/_jsxDEV(ConversationWindow, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-box-container\",\n      children: /*#__PURE__*/_jsxDEV(InputSection, {\n        onPromptSubmit: prompt => {\n          const newMessage = {\n            text: prompt,\n            isUser: true\n          };\n          setMessages([...messages, newMessage]);\n          handleSendMessage(prompt);\n        },\n        onFileUpload: file => console.log('File uploaded:', file.name),\n        onCopyConversation: () => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), showEditPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edit Expert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newExpertName,\n          onChange: e => setNewExpertName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveExpertName,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowEditPopup(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 5\n  }, this);\n}\n\n// Console Component\n_s(MultiChatXpertPage, \"9d+Ac75p1KrolccigPTv+o6jl6Q=\");\n_c = MultiChatXpertPage;\nfunction Console({\n  experts,\n  handleEditExpertClick,\n  volume,\n  setVolume,\n  handleStartSpeechRecognition,\n  handleStopSpeechRecognition,\n  isListening,\n  handleLLMSelection,\n  currentLLM,\n  toggleTTS,\n  isTTSEnabled\n}) {\n  _s2();\n  const [currentView, setCurrentView] = useState(\"default\");\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation Select\"];\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\n  const handleSelectOption = () => {\n    setCurrentView(options[currentOptionIndex]);\n  };\n  const handleBack = () => {\n    setCurrentView(\"default\");\n  };\n  const handleScroll = direction => {\n    if (direction === 'up') {\n      setCurrentOptionIndex(prev => prev === 0 ? options.length - 1 : prev - 1);\n    } else {\n      setCurrentOptionIndex(prev => prev === options.length - 1 ? 0 : prev + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console-container\",\n    children: currentView === \"default\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-option\",\n        children: options[currentOptionIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleScroll('up'),\n          className: \"up-arrow\",\n          children: \"\\u25B2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectOption,\n          className: \"select-button\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleScroll('down'),\n          className: \"down-arrow\",\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"volume-label\",\n          children: \"TTS Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"volume-slider\",\n          min: \"0\",\n          max: \"100\",\n          value: volume,\n          onChange: e => setVolume(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"volume-level\",\n          children: [\" \", volume]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-page-content\",\n        children: [currentView === \"Text-To-Speech\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enable or disable Text-to-Speech:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleTTS,\n            className: `tts-button ${isTTSEnabled ? 'tts-enabled' : 'tts-disabled'}`,\n            children: isTTSEnabled ? \"Disable TTS\" : \"Enable TTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"volume-slider-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"volume-label\",\n              children: \"TTS Volume:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              className: \"volume-slider\",\n              min: \"0\",\n              max: \"100\",\n              value: volume,\n              onChange: e => setVolume(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"volume-level\",\n              children: [\" \", volume]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentView === \"Speech Recognition\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Control Speech Recognition:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: isListening ? handleStopSpeechRecognition : handleStartSpeechRecognition,\n            className: \"speech-button\",\n            children: isListening ? \"Stop Listening\" : \"Start Listening\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentView === \"LLM Selection\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Language Model:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"llm-dropdown\",\n            value: currentLLM || \"\",\n            onChange: e => handleLLMSelection(e.target.value),\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              disabled: true,\n              children: \"Select an LLM\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"ChatGPT\",\n              children: \"ChatGPT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 394,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Google Gemini\",\n              children: \"Google Gemini\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"Anthropic Claude\",\n              children: \"Anthropic Claude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 396,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentView === \"Update Experts\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expert-grid\",\n          children: experts.map((expert, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"expert-button\",\n            onClick: () => handleEditExpertClick(index),\n            children: expert\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }, this), currentView === \"Conversation Select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a conversation to review:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-history\",\n            children: [...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-item\",\n              children: [\"Conversation \", index + 1]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"back-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 327,\n    columnNumber: 5\n  }, this);\n}\n\n// ConversationWindow Component\n_s2(Console, \"EDZiq2nsR6IzKF+HOEuRUdC3Kmg=\");\n_c2 = Console;\nfunction ConversationWindow({\n  messages\n}) {\n  _s3();\n  const conversationRef = useRef(null);\n  useEffect(() => {\n    if (conversationRef.current) {\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-window\",\n    ref: conversationRef,\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`,\n      children: [message.text && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 28\n      }, this), message.images && message.images.map((img, imgIndex) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: img.url,\n        alt: \"AI response\",\n        className: \"ai-image-response\",\n        style: {\n          maxWidth: '100%',\n          marginTop: '10px',\n          borderRadius: '8px'\n        }\n      }, imgIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 440,\n    columnNumber: 5\n  }, this);\n}\n\n// TTS function\n_s3(ConversationWindow, \"Y7nFwtZO/hlnq7te7GKq0r5Z7DM=\");\n_c3 = ConversationWindow;\nfunction speakText(text) {\n  if ('speechSynthesis' in window) {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.rate = 1; // You can adjust rate, pitch, and volume here if needed\n    window.speechSynthesis.speak(utterance);\n  } else {\n    console.warn(\"TTS not supported in this browser\");\n  }\n}\n\n// InputSection Component\nfunction InputSection({\n  onPromptSubmit,\n  onFileUpload,\n  onCopyConversation\n}) {\n  _s4();\n  const [prompt, setPrompt] = useState(\"\");\n  const handleInputChange = e => {\n    setPrompt(e.target.value);\n    e.target.style.height = \"auto\";\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  };\n  const handleFileUpload = e => {\n    if (e.target.files.length > 0) {\n      onFileUpload(e.target.files[0]);\n    }\n  };\n  const handleBlur = e => {\n    if (prompt === \"\") {\n      e.target.style.height = \"20px\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: prompt,\n      onChange: handleInputChange,\n      onBlur: handleBlur,\n      className: \"prompt-input\",\n      placeholder: \"Type your message here...\",\n      rows: 1,\n      style: {\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPromptSubmit(prompt),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 504,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCopyConversation,\n      children: \"Copy Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => document.getElementById('file-upload').click(),\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-upload\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 494,\n    columnNumber: 5\n  }, this);\n}\n_s4(InputSection, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n_c4 = InputSection;\nexport default MultiChatXpertPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MultiChatXpertPage\");\n$RefreshReg$(_c2, \"Console\");\n$RefreshReg$(_c3, \"ConversationWindow\");\n$RefreshReg$(_c4, \"InputSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","userImage","aiImage","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MultiChatXpertPage","_s","messages","setMessages","isTTSEnabled","setTTSEnabled","isSpeechRecognitionOpen","setSpeechRecognitionOpen","isLLMSelectionOpen","setLLMSelectionOpen","isUpdateExpertsOpen","setUpdateExpertsOpen","isExpertPopupOpen","setExpertPopupOpen","experts","setExperts","selectedExperts","setSelectedExperts","currentLLM","setCurrentLLM","showEditPopup","setShowEditPopup","currentExpertEdit","setCurrentExpertEdit","newExpertName","setNewExpertName","expertToggles","setExpertToggles","Array","fill","prompt","setPrompt","isListening","setIsListening","volume","setVolume","SpeechRecognition","window","webkitSpeechRecognition","recognition","transcript","setTranscript","error","setError","continuous","interimResults","lang","onresult","event","interimTranscript","i","resultIndex","results","length","transcriptPart","isFinal","prev","console","log","onerror","onend","handleStartListening","start","handleStopListening","stop","handlePromptSubmit","newMessage","text","isUser","handleSendMessage","openPopup","setting","toggleTTS","toggleExpertPopup","updateExpertName","index","newName","updatedExperts","handleExpertSelection","expert","prevExperts","includes","filter","e","handleLLMSelection","llm","handleEditExpertClick","handleSaveExpertName","getCsrfToken","name","cookies","document","cookie","split","trim","startsWith","substring","message","response","post","selected_experts","selected_option","headers","withCredentials","aiText","data","output","aiResponse","prevMessages","speakText","volumeLevel","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","warn","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","Console","handleStartSpeechRecognition","handleStopSpeechRecognition","ConversationWindow","InputSection","onPromptSubmit","onFileUpload","file","onCopyConversation","navigator","clipboard","writeText","m","join","type","value","onChange","target","_c","_s2","currentView","setCurrentView","options","currentOptionIndex","setCurrentOptionIndex","handleSelectOption","handleBack","handleScroll","direction","min","max","Number","disabled","_","_c2","_s3","conversationRef","current","scrollTop","scrollHeight","ref","images","img","imgIndex","url","style","maxWidth","marginTop","borderRadius","_c3","rate","_s4","handleInputChange","height","handleFileUpload","files","handleBlur","onBlur","placeholder","rows","getElementById","click","id","display","_c4","$RefreshReg$"],"sources":["C:/Users/Hat/Documents/Work Stuff/EthicianWebApp/ReactFrontend/src/components/MultiChatXpertPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './MultiChatXpertPage.css';\r\nimport userImage from './images/personTyping.gif';\r\nimport aiImage from './images/AILooking.gif';\r\nimport axios from 'axios';\r\n\r\nfunction MultiChatXpertPage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isTTSEnabled, setTTSEnabled] = useState(false);\r\n  const [isSpeechRecognitionOpen, setSpeechRecognitionOpen] = useState(false);\r\n  const [isLLMSelectionOpen, setLLMSelectionOpen] = useState(false);\r\n  const [isUpdateExpertsOpen, setUpdateExpertsOpen] = useState(false);\r\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\r\n  const [experts, setExperts] = useState([\r\n    \"Ethician\", \"Mechanical Engineer\", \"Metallurgist\", \"Safety Engineer\", \"Materials Engineer\",\r\n    \"Robotics Engineer\", \"Electrical Engineer\", \"Civil Engineer\", \"Software Engineer\", \"Chemical Engineer\",\r\n    \"Aerospace Engineer\", \"Petroleum Engineer\", \"Biomedical Engineer\", \"Environment Engineer\", \"Quality Engineer\"\r\n  ]);\r\n  const [selectedExperts, setSelectedExperts] = useState([]);\r\n  const [currentLLM, setCurrentLLM] = useState(null);\r\n  const [showEditPopup, setShowEditPopup] = useState(false); // Track if edit popup is open\r\n  const [currentExpertEdit, setCurrentExpertEdit] = useState(null); // Track current expert to edit\r\n  const [newExpertName, setNewExpertName] = useState(\"\"); // Track new expert name input\r\n  // State for toggling expert selection\r\n  const [expertToggles, setExpertToggles] = useState(Array(15).fill(false));\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [volume, setVolume] = useState(50); // Volume state\r\n\r\n  // Check if the browser supports speech recognition\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  const recognition = SpeechRecognition ? new SpeechRecognition() : null;\r\n  const [transcript, setTranscript] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n\r\n\r\n  if (recognition) {\r\n    recognition.continuous = true;\r\n    recognition.interimResults = true;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onresult = (event) => {\r\n        let interimTranscript = \"\";\r\n        for (let i = event.resultIndex; i < event.results.length; i++) {\r\n            const transcriptPart = event.results[i][0].transcript;\r\n            if (event.results[i].isFinal) {\r\n                setTranscript((prev) => prev + \" \" + transcriptPart);\r\n                setPrompt((prev) => prev + \" \" + transcriptPart);  // Update prompt with final transcript\r\n                console.log(\"Final Transcript:\", transcriptPart);  // Log final transcript part\r\n            } else {\r\n                interimTranscript += transcriptPart;\r\n            }\r\n        }\r\n        setPrompt(interimTranscript);  // Display interim transcript in the entry bar\r\n        console.log(\"Interim Transcript:\", interimTranscript);  // Log interim transcript\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n        console.error(\"Speech recognition error:\", event.error);\r\n        setError(`Error: ${event.error}`);\r\n        setIsListening(false);\r\n    };\r\n\r\n    recognition.onend = () => {\r\n        console.log(\"Speech recognition ended.\");  // Log when recognition ends\r\n        setIsListening(false);\r\n    };\r\n}\r\n\r\nconst handleStartListening = () => {\r\n    if (recognition && !isListening) {\r\n        setPrompt(\"\");  // Clear any previous text\r\n        setIsListening(true);\r\n        setError(null);  // Clear any previous errors\r\n        console.log(\"Starting Speech Recognition\");  // Log start action\r\n        recognition.start();\r\n    }\r\n};\r\n\r\nconst handleStopListening = () => {\r\n    if (recognition && isListening) {\r\n        setIsListening(false);\r\n        recognition.stop();\r\n        console.log(\"Stopped Speech Recognition\");  // Log stop action\r\n    }\r\n};\r\n\r\n  const handlePromptSubmit = () => {\r\n    const newMessage = { text: prompt, isUser: true };\r\n    setMessages([...messages, newMessage]);\r\n    handleSendMessage(prompt);\r\n    setPrompt(\"\");\r\n  };\r\n\r\n  const openPopup = (setting) => {\r\n    setTTSEnabled(false);\r\n    setSpeechRecognitionOpen(false);\r\n    setLLMSelectionOpen(false);\r\n    setUpdateExpertsOpen(false);\r\n\r\n    if (setting === \"TTS\") setTTSEnabled(true);\r\n    if (setting === \"SpeechRecognition\") setSpeechRecognitionOpen(true);\r\n    if (setting === \"LLMSelection\") setLLMSelectionOpen(true);\r\n    if (setting === \"UpdateExperts\") setUpdateExpertsOpen(true);\r\n  };\r\n\r\n  // Function to toggle TTS setting\r\n  const toggleTTS = () => {\r\n    setTTSEnabled(!isTTSEnabled);\r\n    console.log(\"TTS Enabled:\", !isTTSEnabled); // Log for confirmation\r\n  };\r\n\r\n  const toggleExpertPopup = () => {\r\n    setExpertPopupOpen(!isExpertPopupOpen);\r\n  };\r\n\r\n  const updateExpertName = (index, newName) => {\r\n    const updatedExperts = [...experts];\r\n    updatedExperts[index] = newName;\r\n    setExperts(updatedExperts);\r\n  };\r\n\r\n  // Function to handle expert selection in the AI Image popup\r\n  const handleExpertSelection = (expert) => {\r\n    setSelectedExperts((prevExperts) => {\r\n        const updatedExperts = prevExperts.includes(expert)\r\n            ? prevExperts.filter((e) => e !== expert)\r\n            : [...prevExperts, expert];\r\n        console.log(\"Updated selectedExperts:\", updatedExperts);  // Log after update\r\n        return updatedExperts;\r\n    });\r\n  };\r\n\r\n  const handleLLMSelection = (llm) => {\r\n    setCurrentLLM(llm);\r\n    console.log(\"Updated currentLLM:\", llm);  // Log after update\r\n  };\r\n\r\n  const handleEditExpertClick = (index) => {\r\n    setCurrentExpertEdit(index);\r\n    setNewExpertName(experts[index]);\r\n    setShowEditPopup(true);\r\n  };\r\n  \r\n  const handleSaveExpertName = () => {\r\n    const updatedExperts = [...experts];\r\n    updatedExperts[currentExpertEdit] = newExpertName;\r\n    setExperts(updatedExperts);\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  function getCsrfToken() {\r\n    const name = 'csrftoken';\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n      cookie = cookie.trim();\r\n      if (cookie.startsWith(name + '=')) {\r\n        return cookie.substring(name.length + 1);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n  \r\n\r\n  const handleSendMessage = async (message) => {\r\n    try {\r\n      console.log(\"Sending message with currentLLM:\", currentLLM);  // Confirm currentLLM\r\n      console.log(\"Sending message with selectedExperts:\", selectedExperts);  // Confirm selectedExperts\r\n\r\n      const response = await axios.post(\r\n        'https://bada-2601-702-0-9480-e902-94e6-a4ed-8872.ngrok-free.app/api/analyze_text/',\r\n        {\r\n          text: message,\r\n          selected_experts: selectedExperts,  \r\n          selected_option: currentLLM      \r\n        },\r\n        {\r\n          headers: {\r\n            'X-CSRFToken': getCsrfToken(),\r\n          },\r\n          withCredentials: true  \r\n        }\r\n      );\r\n\r\n      const aiText = response.data.output || \"No response from AI\";\r\n      const aiResponse = { text: aiText, isUser: false };\r\n      setMessages((prevMessages) => [...prevMessages, aiResponse]);\r\n\r\n      if (isTTSEnabled) {\r\n        speakText(aiText, volume / 100);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error sending message to backend:', error);\r\n    }\r\n  };\r\n\r\n  // Ensure `speakText` uses the specified volume\r\n  const speakText = (text, volumeLevel = 0.5) => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.volume = volumeLevel;  // Volume adjusted here\r\n      window.speechSynthesis.speak(utterance);\r\n    } else {\r\n      console.warn(\"TTS not supported in this browser\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-ui-container\">\r\n      <div className=\"ai-container\">\r\n        <button className=\"ai-image\" onClick={toggleExpertPopup}>\r\n          <img src={aiImage} alt=\"AI Expert\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* AI Expert Popup with Toggle Indicator */}\r\n      {isExpertPopupOpen && (\r\n        <div className=\"expert-popup\">\r\n          <h4>Available Experts</h4>\r\n          <div className=\"expert-grid\">\r\n            {experts.map((expert, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleExpertSelection(expert)}\r\n                className={`expert-button ${selectedExperts.includes(expert) ? 'selected' : ''}`}\r\n              >\r\n                {expert}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleExpertPopup} className=\"close-popup-button\">Close</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"console-container\">\r\n      <Console\r\n        experts={experts}\r\n        handleEditExpertClick={handleEditExpertClick}\r\n        volume={volume}\r\n        setVolume={setVolume}\r\n        handleStartSpeechRecognition={handleStartListening}\r\n        handleStopSpeechRecognition={handleStopListening}\r\n        isListening={isListening}\r\n        handleLLMSelection={handleLLMSelection}  // Pass handleLLMSelection to Console\r\n        currentLLM={currentLLM}\r\n        toggleTTS={toggleTTS}\r\n        isTTSEnabled={isTTSEnabled}\r\n      />\r\n      </div>\r\n\r\n      <div className=\"user-container\">\r\n        <button className=\"user-image\">\r\n          <img src={userImage} alt=\"User Icon\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"conversation-container\">\r\n        <ConversationWindow messages={messages} />\r\n      </div>\r\n\r\n      <div className=\"entry-box-container\">\r\n        <InputSection\r\n          onPromptSubmit={(prompt) => {\r\n            const newMessage = { text: prompt, isUser: true };\r\n            setMessages([...messages, newMessage]);\r\n            handleSendMessage(prompt);\r\n          }}\r\n          onFileUpload={(file) => console.log('File uploaded:', file.name)}\r\n          onCopyConversation={() => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))}\r\n        />\r\n      </div>\r\n\r\n      {/* Expert Edit Popup */}\r\n      {showEditPopup && (\r\n        <div className=\"overlay\">\r\n          <div className=\"edit-popup\">\r\n            <h4>Edit Expert</h4>\r\n            <input\r\n              type=\"text\"\r\n              value={newExpertName}\r\n              onChange={(e) => setNewExpertName(e.target.value)}\r\n            />\r\n            <button onClick={handleSaveExpertName}>Save</button>\r\n            <button onClick={() => setShowEditPopup(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Console Component\r\nfunction Console({ \r\n  experts, \r\n  handleEditExpertClick, \r\n  volume, \r\n  setVolume, \r\n  handleStartSpeechRecognition, \r\n  handleStopSpeechRecognition,\r\n  isListening ,\r\n  handleLLMSelection,\r\n  currentLLM,\r\n  toggleTTS,\r\n  isTTSEnabled\r\n}) {\r\n  const [currentView, setCurrentView] = useState(\"default\");\r\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation Select\"];\r\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\r\n\r\n  const handleSelectOption = () => {\r\n    setCurrentView(options[currentOptionIndex]);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setCurrentView(\"default\");\r\n  };\r\n\r\n  const handleScroll = (direction) => {\r\n    if (direction === 'up') {\r\n      setCurrentOptionIndex((prev) => (prev === 0 ? options.length - 1 : prev - 1));\r\n    } else {\r\n      setCurrentOptionIndex((prev) => (prev === options.length - 1 ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"console-container\">\r\n      {currentView === \"default\" ? (\r\n        <div className=\"settings-content\">\r\n          <div className=\"console-option\">\r\n            {options[currentOptionIndex]}\r\n          </div>\r\n          <div className=\"settings-buttons\">\r\n            <button onClick={() => handleScroll('up')} className=\"up-arrow\">▲</button>\r\n            <button onClick={handleSelectOption} className=\"select-button\">Select</button>\r\n            <button onClick={() => handleScroll('down')} className=\"down-arrow\">▼</button>\r\n          </div>\r\n          {/* Volume Slider */}\r\n          <div className=\"volume-slider-container\">\r\n            <span className=\"volume-label\">TTS Volume:</span>\r\n            <input\r\n              type=\"range\"\r\n              className=\"volume-slider\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={volume}\r\n              onChange={(e) => setVolume(Number(e.target.value))}\r\n            />\r\n            <span className=\"volume-level\"> {volume}</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"settings-content\">\r\n          <h3>{currentView}</h3>\r\n          <div className=\"settings-page-content\">\r\n            {currentView === \"Text-To-Speech\" && (\r\n              <>\r\n                <p>Enable or disable Text-to-Speech:</p>\r\n                <button onClick={toggleTTS} className={`tts-button ${isTTSEnabled ? 'tts-enabled' : 'tts-disabled'}`}>\r\n                  {isTTSEnabled ? \"Disable TTS\" : \"Enable TTS\"}\r\n                </button>\r\n                {/* Volume Slider for Text-To-Speech */}\r\n                <div className=\"volume-slider-container\">\r\n                  <span className=\"volume-label\">TTS Volume:</span>\r\n                  <input\r\n                    type=\"range\"\r\n                    className=\"volume-slider\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={volume}\r\n                    onChange={(e) => setVolume(Number(e.target.value))}\r\n                  />\r\n                  <span className=\"volume-level\"> {volume}</span>\r\n                </div>\r\n              </>\r\n            )}\r\n            {currentView === \"Speech Recognition\" && (\r\n              <>\r\n                <p>Control Speech Recognition:</p>\r\n                <button onClick={isListening ? handleStopSpeechRecognition : handleStartSpeechRecognition} className=\"speech-button\">\r\n                  {isListening ? \"Stop Listening\" : \"Start Listening\"}\r\n                </button>\r\n              </>\r\n            )}\r\n            {currentView === \"LLM Selection\" && (\r\n              <>\r\n                <p>Select Language Model:</p>\r\n                <select\r\n                  className=\"llm-dropdown\"\r\n                  value={currentLLM || \"\"}\r\n                  onChange={(e) => handleLLMSelection(e.target.value)}\r\n                >\r\n                  <option value=\"\" disabled>Select an LLM</option>\r\n                  <option value=\"ChatGPT\">ChatGPT</option>\r\n                  <option value=\"Google Gemini\">Google Gemini</option>\r\n                  <option value=\"Anthropic Claude\">Anthropic Claude</option>\r\n                </select>\r\n              </>\r\n            )}\r\n            {currentView === \"Update Experts\" && (\r\n              <div className=\"expert-grid\">\r\n                {experts.map((expert, index) => (\r\n                  <button key={index} className=\"expert-button\" onClick={() => handleEditExpertClick(index)}>\r\n                    {expert}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {currentView === \"Conversation Select\" && (\r\n              <>\r\n                <p>Select a conversation to review:</p>\r\n                <div className=\"conversation-history\">\r\n                  {[...Array(10)].map((_, index) => (\r\n                    <div key={index} className=\"conversation-item\">\r\n                      Conversation {index + 1}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <button onClick={handleBack} className=\"back-button\">Back</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// ConversationWindow Component\r\nfunction ConversationWindow({ messages }) {\r\n  const conversationRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (conversationRef.current) {\r\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-window\" ref={conversationRef}>\r\n      {messages.map((message, index) => (\r\n        <div key={index} className={`message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`}>\r\n          {message.text && <p>{message.text}</p>}\r\n          {/* Render images if they are present in the AI response */}\r\n          {message.images && message.images.map((img, imgIndex) => (\r\n            <img\r\n              key={imgIndex}\r\n              src={img.url}\r\n              alt=\"AI response\"\r\n              className=\"ai-image-response\"\r\n              style={{ maxWidth: '100%', marginTop: '10px', borderRadius: '8px' }}\r\n            />\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// TTS function\r\nfunction speakText(text) {\r\n  if ('speechSynthesis' in window) {\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.rate = 1; // You can adjust rate, pitch, and volume here if needed\r\n    window.speechSynthesis.speak(utterance);\r\n  } else {\r\n    console.warn(\"TTS not supported in this browser\");\r\n  }\r\n}\r\n\r\n// InputSection Component\r\nfunction InputSection({ onPromptSubmit, onFileUpload, onCopyConversation }) {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setPrompt(e.target.value);\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = `${e.target.scrollHeight}px`;\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      onFileUpload(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    if (prompt === \"\") {\r\n      e.target.style.height = \"20px\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-section\">\r\n      <textarea\r\n        value={prompt}\r\n        onChange={handleInputChange}\r\n        onBlur={handleBlur}\r\n        className=\"prompt-input\"\r\n        placeholder=\"Type your message here...\"\r\n        rows={1}\r\n        style={{ height: \"20px\" }}\r\n      />\r\n      <button onClick={() => onPromptSubmit(prompt)}>Submit</button>\r\n      <button onClick={onCopyConversation}>Copy Conversation</button>\r\n      <button onClick={() => document.getElementById('file-upload').click()}>Upload File</button>\r\n      <input type=\"file\" id=\"file-upload\" style={{ display: 'none' }} onChange={handleFileUpload} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiChatXpertPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}