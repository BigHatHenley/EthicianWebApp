{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./MultiChatXpertPage.css';import userImage from'./images/personTyping.gif';import aiImage from'./images/AILooking.gif';import axios from'axios';import Bowser from\"bowser\";import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";function MultiChatXpertPage(){const[messages,setMessages]=useState([]);const[isTTSEnabled,setTTSEnabled]=useState(false);const[isExpertPopupOpen,setExpertPopupOpen]=useState(false);const[experts,setExperts]=useState([\"Ethician\",\"Mechanical Engineer\",\"Metallurgist\",\"Safety Engineer\",\"Materials Engineer\",\"Robotics Engineer\",\"Electrical Engineer\",\"Civil Engineer\",\"Software Engineer\",\"Chemical Engineer\",\"Aerospace Engineer\",\"Petroleum Engineer\",\"Biomedical Engineer\",\"Environment Engineer\",\"Quality Engineer\"]);const[selectedExperts,setSelectedExperts]=useState([]);const[currentLLM,setCurrentLLM]=useState(null);const[showEditPopup,setShowEditPopup]=useState(false);// Track if edit popup is open\nconst[currentExpertEdit,setCurrentExpertEdit]=useState(null);// Track current expert to edit\nconst[newExpertName,setNewExpertName]=useState(\"\");// Track new expert name input\n// const [expertToggles, setExpertToggles] = useState(Array(15).fill(false));\nconst[prompt,setPrompt]=useState(\"\");const[isListening,setIsListening]=useState(false);const[volume,setVolume]=useState(50);// Volume state\n// Check if the browser supports speech recognition\nconst SpeechRecognition=window.SpeechRecognition||window.webkitSpeechRecognition;const recognition=SpeechRecognition?new SpeechRecognition():null;const browser=Bowser.getParser(window.navigator.userAgent);const isFirefox=browser.getBrowserName()===\"Firefox\";const[conversationHistory,setConversationHistory]=useState([]);const[isLoggedIn,setIsLoggedIn]=useState(false);// Assume initially logged out\nconst[attachedFiles,setAttachedFiles]=useState([]);// <-- Define attachedFiles here\nuseEffect(()=>{const fetchConversations=async()=>{try{const csrfToken=getCsrfToken();// Retrieve CSRF token function\nconst response=await axios.get('https://199c-2601-702-0-9480-988c-b43-9c08-63d1.ngrok-free.app/api/get_conversations/',{withCredentials:true,headers:{'X-CSRFToken':csrfToken}});setConversationHistory(response.data);setIsLoggedIn(true);}catch(error){console.error('Error fetching conversation history:',error);setIsLoggedIn(false);}};fetchConversations();},[]);if(recognition){recognition.continuous=false;recognition.interimResults=false;recognition.lang='en-US';recognition.onresult=event=>{const transcript=event.results[0][0].transcript;setPrompt(transcript);// Update the entry bar with the transcribed text\nconsole.log(\"Transcribed Text:\",transcript);// Log transcription to browser console\n};recognition.onerror=event=>{console.error(\"Speech recognition error:\",event.error);// Error handling in console\nsetIsListening(false);// Reset listening state\n};recognition.onend=()=>{console.log(\"Speech recognition ended.\");// Log end of recognition to browser console\nsetIsListening(false);// Ensure the recording state is reset\n};}// Updated `handleStartListening` function\nconst handleStartListening=()=>{if(isFirefox){alert(\"Speech recognition is not supported on Firefox. Please use a different browser.\");return;}if(recognition&&!isListening){setPrompt(\"\");// Clear any previous text in entry bar\nsetIsListening(true);console.log(\"Starting Speech Recognition\");// Log to browser console\nrecognition.start();}};// Updated `handleStopListening` function\nconst handleStopListening=()=>{if(recognition&&isListening){console.log(\"Stopping Speech Recognition\");// Log to browser console\nrecognition.stop();setIsListening(false);// Reset state so user can restart recording\n}};// Function to toggle TTS setting\nconst toggleTTS=()=>{setTTSEnabled(!isTTSEnabled);console.log(\"TTS Enabled:\",!isTTSEnabled);// Log for confirmation\n};const toggleExpertPopup=()=>{setExpertPopupOpen(!isExpertPopupOpen);};// Function to handle expert selection in the AI Image popup\nconst handleExpertSelection=expert=>{setSelectedExperts(prevExperts=>{const updatedExperts=prevExperts.includes(expert)?prevExperts.filter(e=>e!==expert):[...prevExperts,expert];console.log(\"Updated selectedExperts:\",updatedExperts);// Log after update\nreturn updatedExperts;});};const handleLLMSelection=llm=>{setCurrentLLM(llm);console.log(\"Updated currentLLM:\",llm);// Log after update\n};const handleEditExpertClick=index=>{setCurrentExpertEdit(index);setNewExpertName(experts[index]);setShowEditPopup(true);};const handleSaveExpertName=()=>{const updatedExperts=[...experts];updatedExperts[currentExpertEdit]=newExpertName;setExperts(updatedExperts);setShowEditPopup(false);};function getCsrfToken(){const name='csrftoken';const cookies=document.cookie.split(';');for(let cookie of cookies){cookie=cookie.trim();if(cookie.startsWith(name+'=')){return cookie.substring(name.length+1);}}return null;}const handleRestoreConversation=conversationText=>{// Assuming conversationText is newline-delimited for each message\nconst restoredMessages=conversationText.split('\\n').map((text,idx)=>({text,isUser:idx%2===0// Toggle between user and AI messages for simplicity\n}));setMessages(restoredMessages);};const handleSendMessage=async message=>{const formData=new FormData();formData.append(\"text\",message);formData.append(\"selected_experts\",JSON.stringify(selectedExperts));formData.append(\"selected_option\",currentLLM);// Attach files if there are any\nif(attachedFiles.length>0){attachedFiles.forEach(file=>{formData.append('file',file);});}try{console.log(\"Sending message to backend\");const response=await axios.post('https://199c-2601-702-0-9480-988c-b43-9c08-63d1.ngrok-free.app/api/analyze_text/',formData,{headers:{'X-CSRFToken':getCsrfToken()},withCredentials:true});console.log(\"Full response data:\",response.data);// Safely extract the 'text' content from the response data\nconst aiResponseText=response.data.text?response.data.text:response.data.output||\"No response received\";// Update the messages array with the text response\nsetMessages(prevMessages=>[...prevMessages,{text:aiResponseText,isUser:false}]);// Trigger TTS if enabled\nif(isTTSEnabled)speakText(aiResponseText,volume/100);// Save conversation if the user is logged in\nif(isLoggedIn){const fullConversation=messages.map(msg=>{var _msg$images,_msg$images$;return msg.text||((_msg$images=msg.images)===null||_msg$images===void 0?void 0:(_msg$images$=_msg$images[0])===null||_msg$images$===void 0?void 0:_msg$images$.url)||\"\";}).join('\\n');await axios.post('https://199c-2601-702-0-9480-988c-b43-9c08-63d1.ngrok-free.app/api/save_conversation/',{conversation_text:fullConversation},{headers:{'X-CSRFToken':getCsrfToken()},withCredentials:true});}}catch(error){console.error('Error sending message to backend:',error);}};// Ensure `speakText` uses the specified volume\nconst speakText=function(text){let volumeLevel=arguments.length>1&&arguments[1]!==undefined?arguments[1]:0.5;if('speechSynthesis'in window){const utterance=new SpeechSynthesisUtterance(text);utterance.volume=volumeLevel;// Volume adjusted here\nwindow.speechSynthesis.speak(utterance);}else{console.warn(\"TTS not supported in this browser\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"my-ui-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"ai-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"ai-image\",onClick:toggleExpertPopup,children:/*#__PURE__*/_jsx(\"img\",{src:aiImage,alt:\"AI Expert\"})})}),isExpertPopupOpen&&/*#__PURE__*/_jsxs(\"div\",{className:\"expert-popup\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Available Experts\"}),/*#__PURE__*/_jsx(\"div\",{className:\"expert-grid\",children:experts.map((expert,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleExpertSelection(expert),className:`expert-button ${selectedExperts.includes(expert)?'selected':''}`,children:expert},index))}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleExpertPopup,className:\"close-popup-button\",children:\"Close\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"console-container\",children:/*#__PURE__*/_jsx(Console,{experts:experts,conversationHistory:conversationHistory,handleRestoreConversation:handleRestoreConversation,handleEditExpertClick:handleEditExpertClick,volume:volume,setVolume:setVolume,handleStartListening:handleStartListening,handleStopListening:handleStopListening,isListening:isListening// Control the button label and behavior\n,handleLLMSelection:handleLLMSelection// Pass handleLLMSelection to Console\n,currentLLM:currentLLM,toggleTTS:toggleTTS,isTTSEnabled:isTTSEnabled})}),/*#__PURE__*/_jsx(\"div\",{className:\"user-container\",children:/*#__PURE__*/_jsx(\"button\",{className:\"user-image\",children:/*#__PURE__*/_jsx(\"img\",{src:userImage,alt:\"User Icon\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"conversation-container\",children:/*#__PURE__*/_jsx(ConversationWindow,{messages:messages})}),/*#__PURE__*/_jsx(\"div\",{className:\"entry-box-container\",children:/*#__PURE__*/_jsx(InputSection,{attachedFiles:attachedFiles,setAttachedFiles:setAttachedFiles,prompt:prompt// Pass the transcribed prompt\n,setPrompt:setPrompt,onPromptSubmit:prompt=>{const newMessage={text:prompt,isUser:true};setMessages([...messages,newMessage]);handleSendMessage(prompt);},onFileUpload:file=>console.log('File uploaded:',file.name),onCopyConversation:()=>navigator.clipboard.writeText(messages.map(m=>m.text).join('\\n'))})}),showEditPopup&&/*#__PURE__*/_jsx(\"div\",{className:\"overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"edit-popup\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Edit Expert\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newExpertName,onChange:e=>setNewExpertName(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSaveExpertName,children:\"Save\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowEditPopup(false),children:\"Cancel\"})]})})]});}// Console Component\nfunction Console(_ref){let{experts,handleEditExpertClick,conversationHistory,handleRestoreConversation,volume,setVolume,handleStartListening,handleStopListening,isListening,handleLLMSelection,currentLLM,toggleTTS,isTTSEnabled}=_ref;const[currentView,setCurrentView]=useState(\"default\");const options=[\"Text-To-Speech\",\"Speech Recognition\",\"LLM Selection\",\"Update Experts\",\"Conversation Select\"];const[currentOptionIndex,setCurrentOptionIndex]=useState(0);const handleSelectOption=()=>{setCurrentView(options[currentOptionIndex]);};const handleBack=()=>{setCurrentView(\"default\");};const handleScroll=direction=>{if(direction==='up'){setCurrentOptionIndex(prev=>prev===0?options.length-1:prev-1);}else{setCurrentOptionIndex(prev=>prev===options.length-1?0:prev+1);}};return/*#__PURE__*/_jsx(\"div\",{className:\"console-container\",children:currentView===\"default\"?/*#__PURE__*/_jsxs(\"div\",{className:\"settings-grid\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"settings-display\",children:/*#__PURE__*/_jsx(\"div\",{className:\"console-option\",children:options[currentOptionIndex]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleScroll('up'),className:\"up-arrow\",children:\"\\u25B2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSelectOption,className:\"select-button\",children:\"Select\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleScroll('down'),className:\"down-arrow\",children:\"\\u25BC\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"volume-slider-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"volume-label\",children:\"Volume Level:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"volume-slider\",min:\"0\",max:\"100\",value:volume,onChange:e=>setVolume(Number(e.target.value))}),/*#__PURE__*/_jsx(\"span\",{className:\"volume-level\",children:volume})]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"settings-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:currentView}),/*#__PURE__*/_jsxs(\"div\",{className:\"settings-page-content\",children:[currentView===\"Text-To-Speech\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Enable or disable Text-to-Speech:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleTTS,className:`tts-button ${isTTSEnabled?'tts-enabled':'tts-disabled'}`,children:isTTSEnabled?\"Disable TTS\":\"Enable TTS\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"volume-slider-container\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"volume-label\",children:\"TTS Volume:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",className:\"volume-slider\",min:\"0\",max:\"100\",value:volume,onChange:e=>setVolume(Number(e.target.value))}),/*#__PURE__*/_jsxs(\"span\",{className:\"volume-level\",children:[\" \",volume]})]})]}),currentView===\"Speech Recognition\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Control Speech Recognition:\"}),/*#__PURE__*/_jsx(\"button\",{onClick:isListening?handleStopListening:handleStartListening,children:isListening?\"Stop Recording\":\"Start Recording\"})]}),currentView===\"LLM Selection\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select Language Model:\"}),/*#__PURE__*/_jsxs(\"select\",{className:\"llm-dropdown\",value:currentLLM||\"\",onChange:e=>handleLLMSelection(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",disabled:true,children:\"Select an LLM\"}),/*#__PURE__*/_jsx(\"option\",{value:\"ChatGPT\",children:\"ChatGPT\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Google Gemini\",children:\"Google Gemini\"}),/*#__PURE__*/_jsx(\"option\",{value:\"Anthropic Claude\",children:\"Anthropic Claude\"})]})]}),currentView===\"Update Experts\"&&/*#__PURE__*/_jsx(\"div\",{className:\"expert-grid\",children:experts.map((expert,index)=>/*#__PURE__*/_jsx(\"button\",{className:\"expert-button\",onClick:()=>handleEditExpertClick(index),children:expert},index))}),currentView===\"Conversation Select\"&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"p\",{children:\"Select a conversation to review:\"}),/*#__PURE__*/_jsx(\"div\",{className:\"conversation-history\",children:conversationHistory.length>0?conversationHistory.map((conv,index)=>/*#__PURE__*/_jsx(\"div\",{className:\"conversation-item\",onClick:()=>handleRestoreConversation(conv.conversation_text),children:`${conv.user_id}'s Conversation ${new Date(conv.timestamp).toLocaleString()}`},index)):/*#__PURE__*/_jsx(\"p\",{children:\"No conversation history available.\"})})]})]}),/*#__PURE__*/_jsx(\"button\",{onClick:handleBack,className:\"back-button\",children:\"Back\"})]})});}// ConversationWindow Component\nfunction ConversationWindow(_ref2){let{messages}=_ref2;const conversationRef=useRef(null);useEffect(()=>{if(conversationRef.current){console.log(\"Updated messages:\",messages);conversationRef.current.scrollTop=conversationRef.current.scrollHeight;}},[messages]);return/*#__PURE__*/_jsx(\"div\",{className:\"conversation-window\",ref:conversationRef,children:messages.map((message,index)=>/*#__PURE__*/_jsxs(\"div\",{className:`message-bubble ${message.isUser?'user-message':'ai-message'}`,children:[message.text&&/*#__PURE__*/_jsx(\"p\",{children:message.text}),message.images&&message.images.length>0&&message.images.map((img,imgIndex)=>/*#__PURE__*/_jsx(\"img\",{src:img.url,alt:\"AI response\",className:\"ai-image-response\",style:{maxWidth:'100%',marginTop:'10px',borderRadius:'8px'}},imgIndex))]},index))});}// InputSection Component\nfunction InputSection(_ref3){let{prompt,setPrompt,onPromptSubmit,onFileUpload,onCopyConversation,attachedFiles,setAttachedFiles}=_ref3;const handleInputChange=e=>{setPrompt(e.target.value);e.target.style.height=\"auto\";e.target.style.height=`${e.target.scrollHeight}px`;};const handleFileUpload=e=>{const files=Array.from(e.target.files);if(attachedFiles.length+files.length>5){alert(\"You can only attach up to 5 files at a time.\");return;}const newFiles=files.map(file=>{if(file.type.startsWith(\"image/\")){const reader=new FileReader();reader.onload=e=>{file.preview=e.target.result;// Add preview data to the file object\nsetAttachedFiles(prev=>[...prev]);// Trigger a re-render\n};reader.readAsDataURL(file);}return file;});setAttachedFiles(prev=>[...prev,...newFiles]);files.forEach(file=>onFileUpload(file));};const handleRemoveFile=index=>{const updatedFiles=attachedFiles.filter((_,i)=>i!==index);setAttachedFiles(updatedFiles);};const handleBlur=e=>{if(prompt===\"\"){e.target.style.height=\"20px\";}};return/*#__PURE__*/_jsxs(\"div\",{className:\"input-section\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"attached-files-container\",children:attachedFiles.map((file,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"attached-file-popup\",children:[file.preview?/*#__PURE__*/_jsx(\"img\",{src:file.preview,alt:file.name,className:\"attached-file-image\"}):/*#__PURE__*/_jsx(\"span\",{children:file.name}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleRemoveFile(index),className:\"remove-file-button\",children:\"\\u2715\"})]},index))}),/*#__PURE__*/_jsx(\"textarea\",{value:prompt,onChange:e=>setPrompt(e.target.value),onBlur:handleBlur,className:\"prompt-input\",placeholder:\"Type your message here...\",rows:1,style:{height:\"20px\"}}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>onPromptSubmit(prompt),children:\"Submit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:onCopyConversation,children:\"Copy Conversation\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>document.getElementById('file-upload').click(),children:\"Upload File\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"file-upload\",style:{display:'none'},onChange:handleFileUpload})]});}export default MultiChatXpertPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","userImage","aiImage","axios","Bowser","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","MultiChatXpertPage","messages","setMessages","isTTSEnabled","setTTSEnabled","isExpertPopupOpen","setExpertPopupOpen","experts","setExperts","selectedExperts","setSelectedExperts","currentLLM","setCurrentLLM","showEditPopup","setShowEditPopup","currentExpertEdit","setCurrentExpertEdit","newExpertName","setNewExpertName","prompt","setPrompt","isListening","setIsListening","volume","setVolume","SpeechRecognition","window","webkitSpeechRecognition","recognition","browser","getParser","navigator","userAgent","isFirefox","getBrowserName","conversationHistory","setConversationHistory","isLoggedIn","setIsLoggedIn","attachedFiles","setAttachedFiles","fetchConversations","csrfToken","getCsrfToken","response","get","withCredentials","headers","data","error","console","continuous","interimResults","lang","onresult","event","transcript","results","log","onerror","onend","handleStartListening","alert","start","handleStopListening","stop","toggleTTS","toggleExpertPopup","handleExpertSelection","expert","prevExperts","updatedExperts","includes","filter","e","handleLLMSelection","llm","handleEditExpertClick","index","handleSaveExpertName","name","cookies","document","cookie","split","trim","startsWith","substring","length","handleRestoreConversation","conversationText","restoredMessages","map","text","idx","isUser","handleSendMessage","message","formData","FormData","append","JSON","stringify","forEach","file","post","aiResponseText","output","prevMessages","speakText","fullConversation","msg","_msg$images","_msg$images$","images","url","join","conversation_text","volumeLevel","arguments","undefined","utterance","SpeechSynthesisUtterance","speechSynthesis","speak","warn","className","children","onClick","src","alt","Console","ConversationWindow","InputSection","onPromptSubmit","newMessage","onFileUpload","onCopyConversation","clipboard","writeText","m","type","value","onChange","target","_ref","currentView","setCurrentView","options","currentOptionIndex","setCurrentOptionIndex","handleSelectOption","handleBack","handleScroll","direction","prev","min","max","Number","disabled","conv","user_id","Date","timestamp","toLocaleString","_ref2","conversationRef","current","scrollTop","scrollHeight","ref","img","imgIndex","style","maxWidth","marginTop","borderRadius","_ref3","handleInputChange","height","handleFileUpload","files","Array","from","newFiles","reader","FileReader","onload","preview","result","readAsDataURL","handleRemoveFile","updatedFiles","_","i","handleBlur","onBlur","placeholder","rows","getElementById","click","id","display"],"sources":["C:/Users/Hat/Documents/Work Stuff/EthicianWebApp/ReactFrontend/src/components/MultiChatXpertPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './MultiChatXpertPage.css';\r\nimport userImage from './images/personTyping.gif';\r\nimport aiImage from './images/AILooking.gif';\r\nimport axios from 'axios';\r\nimport Bowser from \"bowser\";\r\n\r\nfunction MultiChatXpertPage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isTTSEnabled, setTTSEnabled] = useState(false);\r\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\r\n  const [experts, setExperts] = useState([\r\n    \"Ethician\", \"Mechanical Engineer\", \"Metallurgist\", \"Safety Engineer\", \"Materials Engineer\",\r\n    \"Robotics Engineer\", \"Electrical Engineer\", \"Civil Engineer\", \"Software Engineer\", \"Chemical Engineer\",\r\n    \"Aerospace Engineer\", \"Petroleum Engineer\", \"Biomedical Engineer\", \"Environment Engineer\", \"Quality Engineer\"\r\n  ]);\r\n  const [selectedExperts, setSelectedExperts] = useState([]);\r\n  const [currentLLM, setCurrentLLM] = useState(null);\r\n  const [showEditPopup, setShowEditPopup] = useState(false); // Track if edit popup is open\r\n  const [currentExpertEdit, setCurrentExpertEdit] = useState(null); // Track current expert to edit\r\n  const [newExpertName, setNewExpertName] = useState(\"\"); // Track new expert name input\r\n  \r\n  // const [expertToggles, setExpertToggles] = useState(Array(15).fill(false));\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [volume, setVolume] = useState(50); // Volume state\r\n\r\n  // Check if the browser supports speech recognition\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  const recognition = SpeechRecognition ? new SpeechRecognition() : null;\r\n  const browser = Bowser.getParser(window.navigator.userAgent);\r\n  const isFirefox = browser.getBrowserName() === \"Firefox\";\r\n\r\n  const [conversationHistory, setConversationHistory] = useState([]);\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false); // Assume initially logged out\r\n\r\n  const [attachedFiles, setAttachedFiles] = useState([]);  // <-- Define attachedFiles here\r\n\r\n  useEffect(() => {\r\n    const fetchConversations = async () => {\r\n      try {\r\n        const csrfToken = getCsrfToken(); // Retrieve CSRF token function\r\n        const response = await axios.get('https://199c-2601-702-0-9480-988c-b43-9c08-63d1.ngrok-free.app/api/get_conversations/', {\r\n          withCredentials: true,\r\n          headers: {\r\n            'X-CSRFToken': csrfToken,\r\n          },\r\n        });\r\n        setConversationHistory(response.data);\r\n        setIsLoggedIn(true);\r\n      } catch (error) {\r\n        console.error('Error fetching conversation history:', error);\r\n        setIsLoggedIn(false);\r\n      }\r\n    };\r\n  \r\n    fetchConversations();\r\n  }, []);\r\n\r\n\r\n  if (recognition) {\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setPrompt(transcript);  // Update the entry bar with the transcribed text\r\n      console.log(\"Transcribed Text:\", transcript);  // Log transcription to browser console\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech recognition error:\", event.error);  // Error handling in console\r\n      setIsListening(false);  // Reset listening state\r\n    };\r\n\r\n    recognition.onend = () => {\r\n      console.log(\"Speech recognition ended.\");  // Log end of recognition to browser console\r\n      setIsListening(false);  // Ensure the recording state is reset\r\n    };\r\n  }\r\n\r\n  // Updated `handleStartListening` function\r\n  const handleStartListening = () => {\r\n    if (isFirefox) {\r\n        alert(\"Speech recognition is not supported on Firefox. Please use a different browser.\");\r\n        return;\r\n    }\r\n    if (recognition && !isListening) {\r\n        setPrompt(\"\");  // Clear any previous text in entry bar\r\n        setIsListening(true);\r\n        console.log(\"Starting Speech Recognition\");  // Log to browser console\r\n        recognition.start();\r\n    }\r\n  };\r\n\r\n  // Updated `handleStopListening` function\r\n  const handleStopListening = () => {\r\n    if (recognition && isListening) {\r\n        console.log(\"Stopping Speech Recognition\");  // Log to browser console\r\n        recognition.stop();\r\n        setIsListening(false);  // Reset state so user can restart recording\r\n    }\r\n  };\r\n\r\n  // Function to toggle TTS setting\r\n  const toggleTTS = () => {\r\n    setTTSEnabled(!isTTSEnabled);\r\n    console.log(\"TTS Enabled:\", !isTTSEnabled); // Log for confirmation\r\n  };\r\n\r\n  const toggleExpertPopup = () => {\r\n    setExpertPopupOpen(!isExpertPopupOpen);\r\n  };\r\n\r\n  // Function to handle expert selection in the AI Image popup\r\n  const handleExpertSelection = (expert) => {\r\n    setSelectedExperts((prevExperts) => {\r\n        const updatedExperts = prevExperts.includes(expert)\r\n            ? prevExperts.filter((e) => e !== expert)\r\n            : [...prevExperts, expert];\r\n        console.log(\"Updated selectedExperts:\", updatedExperts);  // Log after update\r\n        return updatedExperts;\r\n    });\r\n  };\r\n\r\n  const handleLLMSelection = (llm) => {\r\n    setCurrentLLM(llm);\r\n    console.log(\"Updated currentLLM:\", llm);  // Log after update\r\n  };\r\n\r\n  const handleEditExpertClick = (index) => {\r\n    setCurrentExpertEdit(index);\r\n    setNewExpertName(experts[index]);\r\n    setShowEditPopup(true);\r\n  };\r\n  \r\n  const handleSaveExpertName = () => {\r\n    const updatedExperts = [...experts];\r\n    updatedExperts[currentExpertEdit] = newExpertName;\r\n    setExperts(updatedExperts);\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  function getCsrfToken() {\r\n    const name = 'csrftoken';\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n      cookie = cookie.trim();\r\n      if (cookie.startsWith(name + '=')) {\r\n        return cookie.substring(name.length + 1);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const handleRestoreConversation = (conversationText) => {\r\n    // Assuming conversationText is newline-delimited for each message\r\n    const restoredMessages = conversationText.split('\\n').map((text, idx) => ({\r\n      text,\r\n      isUser: idx % 2 === 0, // Toggle between user and AI messages for simplicity\r\n    }));\r\n    setMessages(restoredMessages);\r\n  };\r\n  \r\n\r\n  const handleSendMessage = async (message) => {\r\n    const formData = new FormData();\r\n    formData.append(\"text\", message);\r\n    formData.append(\"selected_experts\", JSON.stringify(selectedExperts));\r\n    formData.append(\"selected_option\", currentLLM);\r\n\r\n    // Attach files if there are any\r\n    if (attachedFiles.length > 0) {\r\n        attachedFiles.forEach((file) => {\r\n            formData.append('file', file);\r\n        });\r\n    }\r\n\r\n    try {\r\n        console.log(\"Sending message to backend\");\r\n        const response = await axios.post(\r\n            'https://199c-2601-702-0-9480-988c-b43-9c08-63d1.ngrok-free.app/api/analyze_text/',\r\n            formData,\r\n            {\r\n                headers: {\r\n                    'X-CSRFToken': getCsrfToken(),\r\n                },\r\n                withCredentials: true,\r\n            }\r\n        );\r\n\r\n        console.log(\"Full response data:\", response.data);\r\n\r\n        // Safely extract the 'text' content from the response data\r\n        const aiResponseText = response.data.text ? response.data.text : response.data.output || \"No response received\";\r\n\r\n        // Update the messages array with the text response\r\n        setMessages((prevMessages) => [\r\n            ...prevMessages,\r\n            { text: aiResponseText, isUser: false }\r\n        ]);\r\n\r\n        // Trigger TTS if enabled\r\n        if (isTTSEnabled) speakText(aiResponseText, volume / 100);\r\n\r\n        // Save conversation if the user is logged in\r\n        if (isLoggedIn) {\r\n            const fullConversation = messages\r\n                .map((msg) => msg.text || msg.images?.[0]?.url || \"\")\r\n                .join('\\n');\r\n            await axios.post(\r\n                'https://199c-2601-702-0-9480-988c-b43-9c08-63d1.ngrok-free.app/api/save_conversation/',\r\n                { conversation_text: fullConversation },\r\n                {\r\n                    headers: { 'X-CSRFToken': getCsrfToken() },\r\n                    withCredentials: true,\r\n                }\r\n            );\r\n        }\r\n    } catch (error) {\r\n        console.error('Error sending message to backend:', error);\r\n    }\r\n};\r\n\r\n  // Ensure `speakText` uses the specified volume\r\n  const speakText = (text, volumeLevel = 0.5) => {\r\n    if ('speechSynthesis' in window) {\r\n      const utterance = new SpeechSynthesisUtterance(text);\r\n      utterance.volume = volumeLevel;  // Volume adjusted here\r\n      window.speechSynthesis.speak(utterance);\r\n    } else {\r\n      console.warn(\"TTS not supported in this browser\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-ui-container\">\r\n      <div className=\"ai-container\">\r\n        <button className=\"ai-image\" onClick={toggleExpertPopup}>\r\n          <img src={aiImage} alt=\"AI Expert\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* AI Expert Popup with Toggle Indicator */}\r\n      {isExpertPopupOpen && (\r\n        <div className=\"expert-popup\">\r\n          <h4>Available Experts</h4>\r\n          <div className=\"expert-grid\">\r\n            {experts.map((expert, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleExpertSelection(expert)}\r\n                className={`expert-button ${selectedExperts.includes(expert) ? 'selected' : ''}`}\r\n              >\r\n                {expert}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleExpertPopup} className=\"close-popup-button\">Close</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"console-container\">\r\n      <Console\r\n        experts={experts}\r\n        conversationHistory={conversationHistory}\r\n        handleRestoreConversation={handleRestoreConversation}\r\n        handleEditExpertClick={handleEditExpertClick}\r\n        volume={volume}\r\n        setVolume={setVolume}\r\n        handleStartListening={handleStartListening}\r\n        handleStopListening={handleStopListening}\r\n        isListening={isListening} // Control the button label and behavior\r\n        handleLLMSelection={handleLLMSelection}  // Pass handleLLMSelection to Console\r\n        currentLLM={currentLLM}\r\n        toggleTTS={toggleTTS}\r\n        isTTSEnabled={isTTSEnabled}\r\n      />\r\n      </div>\r\n\r\n      <div className=\"user-container\">\r\n        <button className=\"user-image\">\r\n          <img src={userImage} alt=\"User Icon\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"conversation-container\">\r\n        <ConversationWindow messages={messages} />\r\n      </div>\r\n\r\n      <div className=\"entry-box-container\">\r\n        <InputSection\r\n          attachedFiles={attachedFiles}\r\n          setAttachedFiles={setAttachedFiles}\r\n          prompt={prompt} // Pass the transcribed prompt\r\n          setPrompt={setPrompt}\r\n          onPromptSubmit={(prompt) => {\r\n            const newMessage = { text: prompt, isUser: true };\r\n            setMessages([...messages, newMessage]);\r\n            handleSendMessage(prompt);\r\n          }}\r\n          onFileUpload={(file) => console.log('File uploaded:', file.name)}\r\n          onCopyConversation={() => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))}\r\n        />\r\n      </div>\r\n\r\n      {/* Expert Edit Popup */}\r\n      {showEditPopup && (\r\n        <div className=\"overlay\">\r\n          <div className=\"edit-popup\">\r\n            <h4>Edit Expert</h4>\r\n            <input\r\n              type=\"text\"\r\n              value={newExpertName}\r\n              onChange={(e) => setNewExpertName(e.target.value)}\r\n            />\r\n            <button onClick={handleSaveExpertName}>Save</button>\r\n            <button onClick={() => setShowEditPopup(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Console Component\r\nfunction Console({ \r\n  experts, \r\n  handleEditExpertClick,\r\n  conversationHistory,\r\n  handleRestoreConversation, \r\n  volume, \r\n  setVolume, \r\n  handleStartListening, \r\n  handleStopListening,\r\n  isListening ,\r\n  handleLLMSelection,\r\n  currentLLM,\r\n  toggleTTS,\r\n  isTTSEnabled\r\n}) {\r\n  const [currentView, setCurrentView] = useState(\"default\");\r\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation Select\"];\r\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\r\n\r\n  const handleSelectOption = () => {\r\n    setCurrentView(options[currentOptionIndex]);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setCurrentView(\"default\");\r\n  };\r\n\r\n  const handleScroll = (direction) => {\r\n    if (direction === 'up') {\r\n      setCurrentOptionIndex((prev) => (prev === 0 ? options.length - 1 : prev - 1));\r\n    } else {\r\n      setCurrentOptionIndex((prev) => (prev === options.length - 1 ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"console-container\">\r\n  {currentView === \"default\" ? (\r\n    <div className=\"settings-grid\">\r\n      <div className=\"settings-display\">\r\n        <div className=\"console-option\">\r\n          {options[currentOptionIndex]}\r\n        </div>\r\n      </div>\r\n      <div className=\"settings-buttons\">\r\n        <button onClick={() => handleScroll('up')} className=\"up-arrow\">▲</button>\r\n        <button onClick={handleSelectOption} className=\"select-button\">Select</button>\r\n        <button onClick={() => handleScroll('down')} className=\"down-arrow\">▼</button>\r\n      </div>\r\n      {/* Volume Slider */}\r\n      <div className=\"volume-slider-container\">\r\n        <span className=\"volume-label\">Volume Level:</span>\r\n        <input\r\n          type=\"range\"\r\n          className=\"volume-slider\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          value={volume}\r\n          onChange={(e) => setVolume(Number(e.target.value))}\r\n        />\r\n        <span className=\"volume-level\">{volume}</span>\r\n      </div>\r\n    </div>\r\n      ) : (\r\n        <div className=\"settings-content\">\r\n          <h3>{currentView}</h3>\r\n          <div className=\"settings-page-content\">\r\n            {currentView === \"Text-To-Speech\" && (\r\n              <>\r\n                <p>Enable or disable Text-to-Speech:</p>\r\n                <button onClick={toggleTTS} className={`tts-button ${isTTSEnabled ? 'tts-enabled' : 'tts-disabled'}`}>\r\n                  {isTTSEnabled ? \"Disable TTS\" : \"Enable TTS\"}\r\n                </button>\r\n                {/* Volume Slider for Text-To-Speech */}\r\n                <div className=\"volume-slider-container\">\r\n                  <span className=\"volume-label\">TTS Volume:</span>\r\n                  <input\r\n                    type=\"range\"\r\n                    className=\"volume-slider\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={volume}\r\n                    onChange={(e) => setVolume(Number(e.target.value))}\r\n                  />\r\n                  <span className=\"volume-level\"> {volume}</span>\r\n                </div>\r\n              </>\r\n            )}\r\n            {currentView === \"Speech Recognition\" && (\r\n              <>\r\n                <p>Control Speech Recognition:</p>\r\n                <button onClick={isListening ? handleStopListening : handleStartListening}>\r\n                  {isListening ? \"Stop Recording\" : \"Start Recording\"}\r\n                </button>\r\n              </>\r\n            )}\r\n            {currentView === \"LLM Selection\" && (\r\n              <>\r\n                <p>Select Language Model:</p>\r\n                <select\r\n                  className=\"llm-dropdown\"\r\n                  value={currentLLM || \"\"}\r\n                  onChange={(e) => handleLLMSelection(e.target.value)}\r\n                >\r\n                  <option value=\"\" disabled>Select an LLM</option>\r\n                  <option value=\"ChatGPT\">ChatGPT</option>\r\n                  <option value=\"Google Gemini\">Google Gemini</option>\r\n                  <option value=\"Anthropic Claude\">Anthropic Claude</option>\r\n                </select>\r\n              </>\r\n            )}\r\n            {currentView === \"Update Experts\" && (\r\n              <div className=\"expert-grid\">\r\n                {experts.map((expert, index) => (\r\n                  <button key={index} className=\"expert-button\" onClick={() => handleEditExpertClick(index)}>\r\n                    {expert}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {currentView === \"Conversation Select\" && (\r\n              <>\r\n                <p>Select a conversation to review:</p>\r\n                <div className=\"conversation-history\">\r\n                  {conversationHistory.length > 0 ? (\r\n                    conversationHistory.map((conv, index) => (\r\n                      <div\r\n                        key={index}\r\n                        className=\"conversation-item\"\r\n                        onClick={() => handleRestoreConversation(conv.conversation_text)}\r\n                      >\r\n                        {`${conv.user_id}'s Conversation ${new Date(conv.timestamp).toLocaleString()}`}\r\n                      </div>\r\n                    ))\r\n                  ) : (\r\n                    <p>No conversation history available.</p>\r\n                  )}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <button onClick={handleBack} className=\"back-button\">Back</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// ConversationWindow Component\r\nfunction ConversationWindow({ messages }) {\r\n  const conversationRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (conversationRef.current) {\r\n      console.log(\"Updated messages:\", messages);\r\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-window\" ref={conversationRef}>\r\n        {messages.map((message, index) => (\r\n            <div\r\n                key={index}\r\n                className={`message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`}\r\n            >\r\n                {/* Display text if present */}\r\n                {message.text && <p>{message.text}</p>}\r\n                \r\n                {/* Display images if present, or skip if none */}\r\n                {message.images && message.images.length > 0 && message.images.map((img, imgIndex) => (\r\n                    <img\r\n                        key={imgIndex}\r\n                        src={img.url}\r\n                        alt=\"AI response\"\r\n                        className=\"ai-image-response\"\r\n                        style={{ maxWidth: '100%', marginTop: '10px', borderRadius: '8px' }}\r\n                    />\r\n                ))}\r\n            </div>\r\n        ))}\r\n    </div>\r\n);\r\n}\r\n\r\n// InputSection Component\r\nfunction InputSection({ prompt, setPrompt, onPromptSubmit, onFileUpload, onCopyConversation, attachedFiles, setAttachedFiles }) {\r\n\r\n  const handleInputChange = (e) => {\r\n    setPrompt(e.target.value);\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = `${e.target.scrollHeight}px`;\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    const files = Array.from(e.target.files);\r\n  \r\n    if (attachedFiles.length + files.length > 5) {\r\n      alert(\"You can only attach up to 5 files at a time.\");\r\n      return;\r\n    }\r\n  \r\n    const newFiles = files.map((file) => {\r\n      if (file.type.startsWith(\"image/\")) {\r\n        const reader = new FileReader();\r\n        reader.onload = (e) => {\r\n          file.preview = e.target.result; // Add preview data to the file object\r\n          setAttachedFiles((prev) => [...prev]); // Trigger a re-render\r\n        };\r\n        reader.readAsDataURL(file);\r\n      }\r\n      return file;\r\n    });\r\n\r\n    setAttachedFiles((prev) => [...prev, ...newFiles]);\r\n    files.forEach((file) => onFileUpload(file));\r\n  };\r\n\r\n  const handleRemoveFile = (index) => {\r\n    const updatedFiles = attachedFiles.filter((_, i) => i !== index);\r\n    setAttachedFiles(updatedFiles);\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    if (prompt === \"\") {\r\n      e.target.style.height = \"20px\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-section\">\r\n      {/* Display file popups above the entry bar */}\r\n      <div className=\"attached-files-container\">\r\n        {attachedFiles.map((file, index) => (\r\n          <div key={index} className=\"attached-file-popup\">\r\n            {file.preview ? (\r\n              <img src={file.preview} alt={file.name} className=\"attached-file-image\" />\r\n            ) : (\r\n              <span>{file.name}</span>\r\n            )}\r\n            <button onClick={() => handleRemoveFile(index)} className=\"remove-file-button\">✕</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      \r\n      <textarea\r\n        value={prompt}\r\n        onChange={(e) => setPrompt(e.target.value)}\r\n        onBlur={handleBlur}\r\n        className=\"prompt-input\"\r\n        placeholder=\"Type your message here...\"\r\n        rows={1}\r\n        style={{ height: \"20px\" }}\r\n      />\r\n      <button onClick={() => onPromptSubmit(prompt)}>Submit</button>\r\n      <button onClick={onCopyConversation}>Copy Conversation</button>\r\n      <button onClick={() => document.getElementById('file-upload').click()}>Upload File</button>\r\n      <input type=\"file\" id=\"file-upload\" style={{ display: 'none' }} onChange={handleFileUpload} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiChatXpertPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}