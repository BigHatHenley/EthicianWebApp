{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hat\\\\Documents\\\\Work Stuff\\\\EthicianWebApp\\\\ReactFrontend\\\\src\\\\components\\\\MultiChatXpertPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './MultiChatXpertPage.css';\nimport userImage from './images/Chips.png';\nimport aiImage from './images/BreachHours.jpg';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MultiChatXpertPage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [isTTSEnabled, setTTSEnabled] = useState(false);\n  const [isSpeechRecognitionOpen, setSpeechRecognitionOpen] = useState(false);\n  const [isLLMSelectionOpen, setLLMSelectionOpen] = useState(false);\n  const [isUpdateExpertsOpen, setUpdateExpertsOpen] = useState(false);\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\n  const [experts, setExperts] = useState([\"Expert 1\", \"Expert 2\", \"Expert 3\", \"Expert 4\", \"Expert 5\", \"Expert 6\", \"Expert 7\", \"Expert 8\", \"Expert 9\", \"Expert 10\", \"Expert 11\", \"Expert 12\", \"Expert 13\", \"Expert 14\", \"Expert 15\"]);\n  const [selectedExperts, setSelectedExperts] = useState([]);\n  const [currentLLM, setCurrentLLM] = useState(null);\n  const [showEditPopup, setShowEditPopup] = useState(false); // Track if edit popup is open\n  const [currentExpertEdit, setCurrentExpertEdit] = useState(null); // Track current expert to edit\n  const [newExpertName, setNewExpertName] = useState(\"\"); // Track new expert name input\n  // State for toggling expert selection\n  const [expertToggles, setExpertToggles] = useState(Array(15).fill(false));\n  const [prompt, setPrompt] = useState(\"\");\n  const [isListening, setIsListening] = useState(false);\n  const [volume, setVolume] = useState(50); // Volume state\n\n  // Check if the browser supports speech recognition\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n  const recognition = SpeechRecognition ? new SpeechRecognition() : null;\n  if (recognition) {\n    recognition.continuous = false;\n    recognition.interimResults = false;\n    recognition.lang = 'en-US';\n    recognition.onresult = event => {\n      const transcript = event.results[0][0].transcript;\n      setPrompt(transcript);\n      setIsListening(false);\n    };\n    recognition.onerror = event => {\n      console.error(\"Speech recognition error:\", event.error);\n      setIsListening(false);\n    };\n  }\n  const handleStartSpeechRecognition = () => {\n    if (recognition) {\n      setIsListening(true);\n      recognition.start();\n    } else {\n      alert(\"Speech recognition is not supported in this browser.\");\n    }\n  };\n  const handlePromptSubmit = () => {\n    const newMessage = {\n      text: prompt,\n      isUser: true\n    };\n    setMessages([...messages, newMessage]);\n    handleSendMessage(prompt);\n    setPrompt(\"\");\n  };\n  const openPopup = setting => {\n    setTTSEnabled(false);\n    setSpeechRecognitionOpen(false);\n    setLLMSelectionOpen(false);\n    setUpdateExpertsOpen(false);\n    if (setting === \"TTS\") setTTSEnabled(true);\n    if (setting === \"SpeechRecognition\") setSpeechRecognitionOpen(true);\n    if (setting === \"LLMSelection\") setLLMSelectionOpen(true);\n    if (setting === \"UpdateExperts\") setUpdateExpertsOpen(true);\n  };\n\n  // Function to toggle TTS in settings\n  const toggleTTS = () => {\n    setTTSEnabled(!isTTSEnabled);\n  };\n  const toggleExpertPopup = () => {\n    setExpertPopupOpen(!isExpertPopupOpen);\n  };\n  const updateExpertName = (index, newName) => {\n    const updatedExperts = [...experts];\n    updatedExperts[index] = newName;\n    setExperts(updatedExperts);\n  };\n\n  // Function to handle expert selection in the AI Image popup\n  const handleExpertSelection = index => {\n    setExpertToggles(prevToggles => {\n      const updatedToggles = [...prevToggles];\n      updatedToggles[index] = !updatedToggles[index]; // Toggle selected state\n      return updatedToggles;\n    });\n  };\n  const handleEditExpertClick = index => {\n    setCurrentExpertEdit(index);\n    setNewExpertName(experts[index]);\n    setShowEditPopup(true);\n  };\n  const handleSaveExpertName = () => {\n    const updatedExperts = [...experts];\n    updatedExperts[currentExpertEdit] = newExpertName;\n    setExperts(updatedExperts);\n    setShowEditPopup(false);\n  };\n  const selectLLM = languageModels => {\n    setCurrentLLM(languageModels);\n  };\n  function getCsrfToken() {\n    const name = 'csrftoken';\n    const cookies = document.cookie.split(';');\n    for (let cookie of cookies) {\n      cookie = cookie.trim();\n      if (cookie.startsWith(name + '=')) {\n        return cookie.substring(name.length + 1);\n      }\n    }\n    return null;\n  }\n  const handleSendMessage = async message => {\n    try {\n      const response = await axios.post('https://bada-2601-702-0-9480-e902-94e6-a4ed-8872.ngrok-free.app/api/analyze_text/', {\n        text: message,\n        selected_experts: JSON.stringify(selectedExperts),\n        selected_option: JSON.stringify(currentLLM)\n      }, {\n        headers: {\n          'X-CSRFToken': getCsrfToken()\n        },\n        withCredentials: true\n      });\n      const aiText = response.data.output || \"No response from AI\";\n      const aiResponse = {\n        text: aiText,\n        isUser: false\n      };\n      setMessages(prevMessages => [...prevMessages, aiResponse]);\n      if (isTTSEnabled) {\n        speakText(aiText);\n      }\n    } catch (error) {\n      console.error('Error sending message to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-ui-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-image\",\n        onClick: toggleExpertPopup,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: aiImage,\n          alt: \"AI Expert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), isExpertPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Experts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expert-grid\",\n        children: experts.map((expert, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleExpertSelection(index) // Connect toggle function\n          ,\n          className: `expert-button ${expertToggles[index] ? 'selected' : ''}`,\n          children: expert\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleExpertPopup,\n        className: \"close-popup-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"console-container\",\n      children: /*#__PURE__*/_jsxDEV(Console, {\n        experts: experts,\n        handleEditExpertClick: handleEditExpertClick,\n        volume: volume,\n        setVolume: setVolume,\n        handleStartSpeechRecognition: handleStartSpeechRecognition,\n        isListening: isListening\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"user-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: userImage,\n          alt: \"User Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-container\",\n      children: /*#__PURE__*/_jsxDEV(ConversationWindow, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-box-container\",\n      children: /*#__PURE__*/_jsxDEV(InputSection, {\n        onPromptSubmit: prompt => {\n          const newMessage = {\n            text: prompt,\n            isUser: true\n          };\n          setMessages([...messages, newMessage]);\n          handleSendMessage(prompt);\n        },\n        onFileUpload: file => console.log('File uploaded:', file.name),\n        onCopyConversation: () => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), showEditPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit-popup\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Edit Expert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newExpertName,\n          onChange: e => setNewExpertName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSaveExpertName,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowEditPopup(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 164,\n    columnNumber: 5\n  }, this);\n}\n\n// Console Component\n_s(MultiChatXpertPage, \"g3cWGjUAXQPRugGMZ/bWRBrpjGw=\");\n_c = MultiChatXpertPage;\nfunction Console({\n  experts,\n  handleEditExpertClick,\n  volume,\n  setVolume,\n  handleStartSpeechRecognition,\n  isListening\n}) {\n  _s2();\n  const [currentView, setCurrentView] = useState(\"default\");\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation Select\"];\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\n  const [isTTSEnabled, setIsTTSEnabled] = useState(false);\n  const toggleTTS = () => {\n    setIsTTSEnabled(prev => !prev);\n  };\n  const handleSelectOption = () => {\n    setCurrentView(options[currentOptionIndex]);\n  };\n  const handleBack = () => {\n    setCurrentView(\"default\");\n  };\n  const handleScroll = direction => {\n    if (direction === 'up') {\n      setCurrentOptionIndex(prev => prev === 0 ? options.length - 1 : prev - 1);\n    } else {\n      setCurrentOptionIndex(prev => prev === options.length - 1 ? 0 : prev + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console-container\",\n    children: currentView === \"default\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-option\",\n        children: options[currentOptionIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleScroll('up'),\n          className: \"up-arrow\",\n          children: \"\\u25B2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSelectOption,\n          className: \"select-button\",\n          children: \"Select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleScroll('down'),\n          className: \"down-arrow\",\n          children: \"\\u25BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"volume-slider-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"volume-label\",\n          children: \"TTS Volume:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"range\",\n          className: \"volume-slider\",\n          min: \"0\",\n          max: \"100\",\n          value: volume,\n          onChange: e => setVolume(Number(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"volume-level\",\n          children: [\" \", volume]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: currentView\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-page-content\",\n        children: [currentView === \"Text-To-Speech\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Enable or disable Text-to-Speech:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: toggleTTS,\n            className: `tts-button ${isTTSEnabled ? 'tts-enabled' : 'tts-disabled'}`,\n            children: isTTSEnabled ? \"Disable TTS\" : \"Enable TTS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"volume-slider-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"volume-label\",\n              children: \"TTS Volume:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"range\",\n              className: \"volume-slider\",\n              min: \"0\",\n              max: \"100\",\n              value: volume,\n              onChange: e => setVolume(Number(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"volume-level\",\n              children: [\" \", volume]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentView === \"Speech Recognition\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Control Speech Recognition:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleStartSpeechRecognition,\n            className: `speech-button ${isListening ? 'listening' : ''}`,\n            children: isListening ? \"Stop\" : \"Speak Your Prompt\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentView === \"LLM Selection\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select Language Model:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            className: \"llm-dropdown\",\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"ChatGPT\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Google Gemini\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              children: \"Anthropic Claude\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 344,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true), currentView === \"Update Experts\" && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"expert-grid\",\n          children: experts.map((expert, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"expert-button\",\n            onClick: () => handleEditExpertClick(index),\n            children: expert\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 15\n        }, this), currentView === \"Conversation Select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Select a conversation to review:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conversation-history\",\n            children: [...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-item\",\n              children: [\"Conversation \", index + 1]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBack,\n        className: \"back-button\",\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n}\n\n// ConversationWindow Component\n_s2(Console, \"oa/ixy66ZVNK+wOqpsnoqFhmXvI=\");\n_c2 = Console;\nfunction ConversationWindow({\n  messages\n}) {\n  _s3();\n  const conversationRef = useRef(null);\n  useEffect(() => {\n    if (conversationRef.current) {\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-window\",\n    ref: conversationRef,\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}\n\n// TTS function\n_s3(ConversationWindow, \"Y7nFwtZO/hlnq7te7GKq0r5Z7DM=\");\n_c3 = ConversationWindow;\nfunction speakText(text) {\n  if ('speechSynthesis' in window) {\n    const utterance = new SpeechSynthesisUtterance(text);\n    utterance.rate = 1; // You can adjust rate, pitch, and volume here if needed\n    window.speechSynthesis.speak(utterance);\n  } else {\n    console.warn(\"TTS not supported in this browser\");\n  }\n}\n\n// InputSection Component\nfunction InputSection({\n  onPromptSubmit,\n  onFileUpload,\n  onCopyConversation\n}) {\n  _s4();\n  const [prompt, setPrompt] = useState(\"\");\n  const handleInputChange = e => {\n    setPrompt(e.target.value);\n    e.target.style.height = \"auto\";\n    e.target.style.height = `${e.target.scrollHeight}px`;\n  };\n  const handleFileUpload = e => {\n    if (e.target.files.length > 0) {\n      onFileUpload(e.target.files[0]);\n    }\n  };\n  const handleBlur = e => {\n    if (prompt === \"\") {\n      e.target.style.height = \"20px\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: prompt,\n      onChange: handleInputChange,\n      onBlur: handleBlur,\n      className: \"prompt-input\",\n      placeholder: \"Type your message here...\",\n      rows: 1,\n      style: {\n        height: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPromptSubmit(prompt),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCopyConversation,\n      children: \"Copy Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => document.getElementById('file-upload').click(),\n      children: \"Upload File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 447,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      id: \"file-upload\",\n      style: {\n        display: 'none'\n      },\n      onChange: handleFileUpload\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 435,\n    columnNumber: 5\n  }, this);\n}\n_s4(InputSection, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n_c4 = InputSection;\nexport default MultiChatXpertPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MultiChatXpertPage\");\n$RefreshReg$(_c2, \"Console\");\n$RefreshReg$(_c3, \"ConversationWindow\");\n$RefreshReg$(_c4, \"InputSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","userImage","aiImage","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MultiChatXpertPage","_s","messages","setMessages","isTTSEnabled","setTTSEnabled","isSpeechRecognitionOpen","setSpeechRecognitionOpen","isLLMSelectionOpen","setLLMSelectionOpen","isUpdateExpertsOpen","setUpdateExpertsOpen","isExpertPopupOpen","setExpertPopupOpen","experts","setExperts","selectedExperts","setSelectedExperts","currentLLM","setCurrentLLM","showEditPopup","setShowEditPopup","currentExpertEdit","setCurrentExpertEdit","newExpertName","setNewExpertName","expertToggles","setExpertToggles","Array","fill","prompt","setPrompt","isListening","setIsListening","volume","setVolume","SpeechRecognition","window","webkitSpeechRecognition","recognition","continuous","interimResults","lang","onresult","event","transcript","results","onerror","console","error","handleStartSpeechRecognition","start","alert","handlePromptSubmit","newMessage","text","isUser","handleSendMessage","openPopup","setting","toggleTTS","toggleExpertPopup","updateExpertName","index","newName","updatedExperts","handleExpertSelection","prevToggles","updatedToggles","handleEditExpertClick","handleSaveExpertName","selectLLM","languageModels","getCsrfToken","name","cookies","document","cookie","split","trim","startsWith","substring","length","message","response","post","selected_experts","JSON","stringify","selected_option","headers","withCredentials","aiText","data","output","aiResponse","prevMessages","speakText","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","expert","Console","ConversationWindow","InputSection","onPromptSubmit","onFileUpload","file","log","onCopyConversation","navigator","clipboard","writeText","m","join","type","value","onChange","e","target","_c","_s2","currentView","setCurrentView","options","currentOptionIndex","setCurrentOptionIndex","setIsTTSEnabled","prev","handleSelectOption","handleBack","handleScroll","direction","min","max","Number","_","_c2","_s3","conversationRef","current","scrollTop","scrollHeight","ref","_c3","utterance","SpeechSynthesisUtterance","rate","speechSynthesis","speak","warn","_s4","handleInputChange","style","height","handleFileUpload","files","handleBlur","onBlur","placeholder","rows","getElementById","click","id","display","_c4","$RefreshReg$"],"sources":["C:/Users/Hat/Documents/Work Stuff/EthicianWebApp/ReactFrontend/src/components/MultiChatXpertPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './MultiChatXpertPage.css';\r\nimport userImage from './images/Chips.png';\r\nimport aiImage from './images/BreachHours.jpg';\r\nimport axios from 'axios';\r\n\r\nfunction MultiChatXpertPage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [isTTSEnabled, setTTSEnabled] = useState(false);\r\n  const [isSpeechRecognitionOpen, setSpeechRecognitionOpen] = useState(false);\r\n  const [isLLMSelectionOpen, setLLMSelectionOpen] = useState(false);\r\n  const [isUpdateExpertsOpen, setUpdateExpertsOpen] = useState(false);\r\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\r\n  const [experts, setExperts] = useState([\r\n    \"Expert 1\", \"Expert 2\", \"Expert 3\", \"Expert 4\", \"Expert 5\",\r\n    \"Expert 6\", \"Expert 7\", \"Expert 8\", \"Expert 9\", \"Expert 10\",\r\n    \"Expert 11\", \"Expert 12\", \"Expert 13\", \"Expert 14\", \"Expert 15\"\r\n  ]);\r\n  const [selectedExperts, setSelectedExperts] = useState([]);\r\n  const [currentLLM, setCurrentLLM] = useState(null);\r\n  const [showEditPopup, setShowEditPopup] = useState(false); // Track if edit popup is open\r\n  const [currentExpertEdit, setCurrentExpertEdit] = useState(null); // Track current expert to edit\r\n  const [newExpertName, setNewExpertName] = useState(\"\"); // Track new expert name input\r\n  // State for toggling expert selection\r\n  const [expertToggles, setExpertToggles] = useState(Array(15).fill(false));\r\n  const [prompt, setPrompt] = useState(\"\");\r\n  const [isListening, setIsListening] = useState(false);\r\n  const [volume, setVolume] = useState(50); // Volume state\r\n\r\n  // Check if the browser supports speech recognition\r\n  const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n  const recognition = SpeechRecognition ? new SpeechRecognition() : null;\r\n\r\n  if (recognition) {\r\n    recognition.continuous = false;\r\n    recognition.interimResults = false;\r\n    recognition.lang = 'en-US';\r\n\r\n    recognition.onresult = (event) => {\r\n      const transcript = event.results[0][0].transcript;\r\n      setPrompt(transcript);\r\n      setIsListening(false);\r\n    };\r\n\r\n    recognition.onerror = (event) => {\r\n      console.error(\"Speech recognition error:\", event.error);\r\n      setIsListening(false);\r\n    };\r\n  }\r\n\r\n  const handleStartSpeechRecognition = () => {\r\n    if (recognition) {\r\n      setIsListening(true);\r\n      recognition.start();\r\n    } else {\r\n      alert(\"Speech recognition is not supported in this browser.\");\r\n    }\r\n  };\r\n\r\n  const handlePromptSubmit = () => {\r\n    const newMessage = { text: prompt, isUser: true };\r\n    setMessages([...messages, newMessage]);\r\n    handleSendMessage(prompt);\r\n    setPrompt(\"\");\r\n  };\r\n\r\n  const openPopup = (setting) => {\r\n    setTTSEnabled(false);\r\n    setSpeechRecognitionOpen(false);\r\n    setLLMSelectionOpen(false);\r\n    setUpdateExpertsOpen(false);\r\n\r\n    if (setting === \"TTS\") setTTSEnabled(true);\r\n    if (setting === \"SpeechRecognition\") setSpeechRecognitionOpen(true);\r\n    if (setting === \"LLMSelection\") setLLMSelectionOpen(true);\r\n    if (setting === \"UpdateExperts\") setUpdateExpertsOpen(true);\r\n  };\r\n\r\n  // Function to toggle TTS in settings\r\n  const toggleTTS = () => {\r\n    setTTSEnabled(!isTTSEnabled);\r\n  };\r\n\r\n  const toggleExpertPopup = () => {\r\n    setExpertPopupOpen(!isExpertPopupOpen);\r\n  };\r\n\r\n  const updateExpertName = (index, newName) => {\r\n    const updatedExperts = [...experts];\r\n    updatedExperts[index] = newName;\r\n    setExperts(updatedExperts);\r\n  };\r\n\r\n  // Function to handle expert selection in the AI Image popup\r\n  const handleExpertSelection = (index) => {\r\n    setExpertToggles((prevToggles) => {\r\n      const updatedToggles = [...prevToggles];\r\n      updatedToggles[index] = !updatedToggles[index]; // Toggle selected state\r\n      return updatedToggles;\r\n    });\r\n  };\r\n\r\n  const handleEditExpertClick = (index) => {\r\n    setCurrentExpertEdit(index);\r\n    setNewExpertName(experts[index]);\r\n    setShowEditPopup(true);\r\n  };\r\n  \r\n  const handleSaveExpertName = () => {\r\n    const updatedExperts = [...experts];\r\n    updatedExperts[currentExpertEdit] = newExpertName;\r\n    setExperts(updatedExperts);\r\n    setShowEditPopup(false);\r\n  };\r\n\r\n  const selectLLM = (languageModels) => {\r\n    setCurrentLLM(languageModels)\r\n  }\r\n\r\n  function getCsrfToken() {\r\n    const name = 'csrftoken';\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n      cookie = cookie.trim();\r\n      if (cookie.startsWith(name + '=')) {\r\n        return cookie.substring(name.length + 1);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const handleSendMessage = async (message) => {\r\n    try {\r\n      const response = await axios.post(\r\n        'https://bada-2601-702-0-9480-e902-94e6-a4ed-8872.ngrok-free.app/api/analyze_text/', \r\n        {\r\n          text: message,\r\n          selected_experts: JSON.stringify(selectedExperts),  \r\n          selected_option: JSON.stringify(currentLLM)          \r\n        },\r\n        {\r\n          headers: {\r\n            'X-CSRFToken': getCsrfToken(),\r\n          },\r\n          withCredentials: true  \r\n        }\r\n      );\r\n\r\n      const aiText = response.data.output || \"No response from AI\";\r\n      \r\n      const aiResponse = { text: aiText, isUser: false };\r\n      setMessages((prevMessages) => [...prevMessages, aiResponse]);\r\n\r\n      if (isTTSEnabled) {\r\n        speakText(aiText);\r\n      }\r\n\r\n    } catch (error) {\r\n      console.error('Error sending message to backend:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-ui-container\">\r\n      <div className=\"ai-container\">\r\n        <button className=\"ai-image\" onClick={toggleExpertPopup}>\r\n          <img src={aiImage} alt=\"AI Expert\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* AI Expert Popup with Toggle Indicator */}\r\n      {isExpertPopupOpen && (\r\n        <div className=\"expert-popup\">\r\n          <h4>Available Experts</h4>\r\n          <div className=\"expert-grid\">\r\n            {experts.map((expert, index) => (\r\n              <button\r\n                key={index}\r\n                onClick={() => handleExpertSelection(index)} // Connect toggle function\r\n                className={`expert-button ${expertToggles[index] ? 'selected' : ''}`}\r\n              >\r\n                {expert}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleExpertPopup} className=\"close-popup-button\">Close</button>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"console-container\">\r\n      <Console\r\n        experts={experts}\r\n        handleEditExpertClick={handleEditExpertClick}\r\n        volume={volume}\r\n        setVolume={setVolume}\r\n        handleStartSpeechRecognition={handleStartSpeechRecognition}\r\n        isListening={isListening}\r\n      />\r\n      </div>\r\n\r\n      <div className=\"user-container\">\r\n        <button className=\"user-image\">\r\n          <img src={userImage} alt=\"User Icon\" />\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"conversation-container\">\r\n        <ConversationWindow messages={messages} />\r\n      </div>\r\n\r\n      <div className=\"entry-box-container\">\r\n        <InputSection\r\n          onPromptSubmit={(prompt) => {\r\n            const newMessage = { text: prompt, isUser: true };\r\n            setMessages([...messages, newMessage]);\r\n            handleSendMessage(prompt);\r\n          }}\r\n          onFileUpload={(file) => console.log('File uploaded:', file.name)}\r\n          onCopyConversation={() => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))}\r\n        />\r\n      </div>\r\n\r\n      {/* Expert Edit Popup */}\r\n      {showEditPopup && (\r\n        <div className=\"overlay\">\r\n          <div className=\"edit-popup\">\r\n            <h4>Edit Expert</h4>\r\n            <input\r\n              type=\"text\"\r\n              value={newExpertName}\r\n              onChange={(e) => setNewExpertName(e.target.value)}\r\n            />\r\n            <button onClick={handleSaveExpertName}>Save</button>\r\n            <button onClick={() => setShowEditPopup(false)}>Cancel</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// Console Component\r\nfunction Console({ \r\n  experts, \r\n  handleEditExpertClick, \r\n  volume, \r\n  setVolume, \r\n  handleStartSpeechRecognition, \r\n  isListening \r\n}) {\r\n  const [currentView, setCurrentView] = useState(\"default\");\r\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation Select\"];\r\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\r\n  const [isTTSEnabled, setIsTTSEnabled] = useState(false);\r\n\r\n  const toggleTTS = () => {\r\n    setIsTTSEnabled((prev) => !prev);\r\n  };\r\n\r\n  const handleSelectOption = () => {\r\n    setCurrentView(options[currentOptionIndex]);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setCurrentView(\"default\");\r\n  };\r\n\r\n  const handleScroll = (direction) => {\r\n    if (direction === 'up') {\r\n      setCurrentOptionIndex((prev) => (prev === 0 ? options.length - 1 : prev - 1));\r\n    } else {\r\n      setCurrentOptionIndex((prev) => (prev === options.length - 1 ? 0 : prev + 1));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"console-container\">\r\n      {currentView === \"default\" ? (\r\n        <div className=\"settings-content\">\r\n          <div className=\"console-option\">\r\n            {options[currentOptionIndex]}\r\n          </div>\r\n          <div className=\"settings-buttons\">\r\n            <button onClick={() => handleScroll('up')} className=\"up-arrow\">▲</button>\r\n            <button onClick={handleSelectOption} className=\"select-button\">Select</button>\r\n            <button onClick={() => handleScroll('down')} className=\"down-arrow\">▼</button>\r\n          </div>\r\n          {/* Volume Slider */}\r\n          <div className=\"volume-slider-container\">\r\n            <span className=\"volume-label\">TTS Volume:</span>\r\n            <input\r\n              type=\"range\"\r\n              className=\"volume-slider\"\r\n              min=\"0\"\r\n              max=\"100\"\r\n              value={volume}\r\n              onChange={(e) => setVolume(Number(e.target.value))}\r\n            />\r\n            <span className=\"volume-level\"> {volume}</span>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"settings-content\">\r\n          <h3>{currentView}</h3>\r\n          <div className=\"settings-page-content\">\r\n            {currentView === \"Text-To-Speech\" && (\r\n              <>\r\n                <p>Enable or disable Text-to-Speech:</p>\r\n                <button\r\n                  onClick={toggleTTS}\r\n                  className={`tts-button ${isTTSEnabled ? 'tts-enabled' : 'tts-disabled'}`}\r\n                >\r\n                  {isTTSEnabled ? \"Disable TTS\" : \"Enable TTS\"}\r\n                </button>\r\n                {/* Volume Slider for Text-To-Speech */}\r\n                <div className=\"volume-slider-container\">\r\n                  <span className=\"volume-label\">TTS Volume:</span>\r\n                  <input\r\n                    type=\"range\"\r\n                    className=\"volume-slider\"\r\n                    min=\"0\"\r\n                    max=\"100\"\r\n                    value={volume}\r\n                    onChange={(e) => setVolume(Number(e.target.value))}\r\n                  />\r\n                  <span className=\"volume-level\"> {volume}</span>\r\n                </div>\r\n              </>\r\n            )}\r\n            {currentView === \"Speech Recognition\" && (\r\n              <>\r\n                <p>Control Speech Recognition:</p>\r\n                <button \r\n                  onClick={handleStartSpeechRecognition} \r\n                  className={`speech-button ${isListening ? 'listening' : ''}`}\r\n                >\r\n                  {isListening ? \"Stop\" : \"Speak Your Prompt\"}\r\n                </button>\r\n              </>\r\n            )}\r\n            {currentView === \"LLM Selection\" && (\r\n              <>\r\n                <p>Select Language Model:</p>\r\n                <select className=\"llm-dropdown\">\r\n                  <option>ChatGPT</option>\r\n                  <option>Google Gemini</option>\r\n                  <option>Anthropic Claude</option>\r\n                </select>\r\n              </>\r\n            )}\r\n            {currentView === \"Update Experts\" && (\r\n              <div className=\"expert-grid\">\r\n                {experts.map((expert, index) => (\r\n                  <button key={index} className=\"expert-button\" onClick={() => handleEditExpertClick(index)}>\r\n                    {expert}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {currentView === \"Conversation Select\" && (\r\n              <>\r\n                <p>Select a conversation to review:</p>\r\n                <div className=\"conversation-history\">\r\n                  {[...Array(10)].map((_, index) => (\r\n                    <div key={index} className=\"conversation-item\">\r\n                      Conversation {index + 1}\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </>\r\n            )}\r\n          </div>\r\n          <button onClick={handleBack} className=\"back-button\">Back</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\n// ConversationWindow Component\r\nfunction ConversationWindow({ messages }) {\r\n  const conversationRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (conversationRef.current) {\r\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-window\" ref={conversationRef}>\r\n      {messages.map((message, index) => (\r\n        <div key={index} className={`message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`}>\r\n          <p>{message.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// TTS function\r\nfunction speakText(text) {\r\n  if ('speechSynthesis' in window) {\r\n    const utterance = new SpeechSynthesisUtterance(text);\r\n    utterance.rate = 1; // You can adjust rate, pitch, and volume here if needed\r\n    window.speechSynthesis.speak(utterance);\r\n  } else {\r\n    console.warn(\"TTS not supported in this browser\");\r\n  }\r\n}\r\n\r\n// InputSection Component\r\nfunction InputSection({ onPromptSubmit, onFileUpload, onCopyConversation }) {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setPrompt(e.target.value);\r\n    e.target.style.height = \"auto\";\r\n    e.target.style.height = `${e.target.scrollHeight}px`;\r\n  };\r\n\r\n  const handleFileUpload = (e) => {\r\n    if (e.target.files.length > 0) {\r\n      onFileUpload(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    if (prompt === \"\") {\r\n      e.target.style.height = \"20px\";\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-section\">\r\n      <textarea\r\n        value={prompt}\r\n        onChange={handleInputChange}\r\n        onBlur={handleBlur}\r\n        className=\"prompt-input\"\r\n        placeholder=\"Type your message here...\"\r\n        rows={1}\r\n        style={{ height: \"20px\" }}\r\n      />\r\n      <button onClick={() => onPromptSubmit(prompt)}>Submit</button>\r\n      <button onClick={onCopyConversation}>Copy Conversation</button>\r\n      <button onClick={() => document.getElementById('file-upload').click()}>Upload File</button>\r\n      <input type=\"file\" id=\"file-upload\" style={{ display: 'none' }} onChange={handleFileUpload} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiChatXpertPage;\r\n"],"mappings":";;;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAO,0BAA0B;AACjC,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,kBAAkBA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACc,YAAY,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACgB,uBAAuB,EAAEC,wBAAwB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3E,MAAM,CAACkB,kBAAkB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EACjE,MAAM,CAACoB,mBAAmB,EAAEC,oBAAoB,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACnE,MAAM,CAACsB,iBAAiB,EAAEC,kBAAkB,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,CACrC,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAC1D,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,WAAW,EAC3D,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW,CAChE,CAAC;EACF,MAAM,CAAC0B,eAAe,EAAEC,kBAAkB,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAAC4B,UAAU,EAAEC,aAAa,CAAC,GAAG7B,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAAC8B,aAAa,EAAEC,gBAAgB,CAAC,GAAG/B,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACgC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClE,MAAM,CAACkC,aAAa,EAAEC,gBAAgB,CAAC,GAAGnC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxD;EACA,MAAM,CAACoC,aAAa,EAAEC,gBAAgB,CAAC,GAAGrC,QAAQ,CAACsC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;EACzE,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAAC0C,WAAW,EAAEC,cAAc,CAAC,GAAG3C,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4C,MAAM,EAAEC,SAAS,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAM8C,iBAAiB,GAAGC,MAAM,CAACD,iBAAiB,IAAIC,MAAM,CAACC,uBAAuB;EACpF,MAAMC,WAAW,GAAGH,iBAAiB,GAAG,IAAIA,iBAAiB,CAAC,CAAC,GAAG,IAAI;EAEtE,IAAIG,WAAW,EAAE;IACfA,WAAW,CAACC,UAAU,GAAG,KAAK;IAC9BD,WAAW,CAACE,cAAc,GAAG,KAAK;IAClCF,WAAW,CAACG,IAAI,GAAG,OAAO;IAE1BH,WAAW,CAACI,QAAQ,GAAIC,KAAK,IAAK;MAChC,MAAMC,UAAU,GAAGD,KAAK,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAACD,UAAU;MACjDd,SAAS,CAACc,UAAU,CAAC;MACrBZ,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;IAEDM,WAAW,CAACQ,OAAO,GAAIH,KAAK,IAAK;MAC/BI,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEL,KAAK,CAACK,KAAK,CAAC;MACvDhB,cAAc,CAAC,KAAK,CAAC;IACvB,CAAC;EACH;EAEA,MAAMiB,4BAA4B,GAAGA,CAAA,KAAM;IACzC,IAAIX,WAAW,EAAE;MACfN,cAAc,CAAC,IAAI,CAAC;MACpBM,WAAW,CAACY,KAAK,CAAC,CAAC;IACrB,CAAC,MAAM;MACLC,KAAK,CAAC,sDAAsD,CAAC;IAC/D;EACF,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,UAAU,GAAG;MAAEC,IAAI,EAAEzB,MAAM;MAAE0B,MAAM,EAAE;IAAK,CAAC;IACjDrD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEoD,UAAU,CAAC,CAAC;IACtCG,iBAAiB,CAAC3B,MAAM,CAAC;IACzBC,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,MAAM2B,SAAS,GAAIC,OAAO,IAAK;IAC7BtD,aAAa,CAAC,KAAK,CAAC;IACpBE,wBAAwB,CAAC,KAAK,CAAC;IAC/BE,mBAAmB,CAAC,KAAK,CAAC;IAC1BE,oBAAoB,CAAC,KAAK,CAAC;IAE3B,IAAIgD,OAAO,KAAK,KAAK,EAAEtD,aAAa,CAAC,IAAI,CAAC;IAC1C,IAAIsD,OAAO,KAAK,mBAAmB,EAAEpD,wBAAwB,CAAC,IAAI,CAAC;IACnE,IAAIoD,OAAO,KAAK,cAAc,EAAElD,mBAAmB,CAAC,IAAI,CAAC;IACzD,IAAIkD,OAAO,KAAK,eAAe,EAAEhD,oBAAoB,CAAC,IAAI,CAAC;EAC7D,CAAC;;EAED;EACA,MAAMiD,SAAS,GAAGA,CAAA,KAAM;IACtBvD,aAAa,CAAC,CAACD,YAAY,CAAC;EAC9B,CAAC;EAED,MAAMyD,iBAAiB,GAAGA,CAAA,KAAM;IAC9BhD,kBAAkB,CAAC,CAACD,iBAAiB,CAAC;EACxC,CAAC;EAED,MAAMkD,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3C,MAAMC,cAAc,GAAG,CAAC,GAAGnD,OAAO,CAAC;IACnCmD,cAAc,CAACF,KAAK,CAAC,GAAGC,OAAO;IAC/BjD,UAAU,CAACkD,cAAc,CAAC;EAC5B,CAAC;;EAED;EACA,MAAMC,qBAAqB,GAAIH,KAAK,IAAK;IACvCpC,gBAAgB,CAAEwC,WAAW,IAAK;MAChC,MAAMC,cAAc,GAAG,CAAC,GAAGD,WAAW,CAAC;MACvCC,cAAc,CAACL,KAAK,CAAC,GAAG,CAACK,cAAc,CAACL,KAAK,CAAC,CAAC,CAAC;MAChD,OAAOK,cAAc;IACvB,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,qBAAqB,GAAIN,KAAK,IAAK;IACvCxC,oBAAoB,CAACwC,KAAK,CAAC;IAC3BtC,gBAAgB,CAACX,OAAO,CAACiD,KAAK,CAAC,CAAC;IAChC1C,gBAAgB,CAAC,IAAI,CAAC;EACxB,CAAC;EAED,MAAMiD,oBAAoB,GAAGA,CAAA,KAAM;IACjC,MAAML,cAAc,GAAG,CAAC,GAAGnD,OAAO,CAAC;IACnCmD,cAAc,CAAC3C,iBAAiB,CAAC,GAAGE,aAAa;IACjDT,UAAU,CAACkD,cAAc,CAAC;IAC1B5C,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,MAAMkD,SAAS,GAAIC,cAAc,IAAK;IACpCrD,aAAa,CAACqD,cAAc,CAAC;EAC/B,CAAC;EAED,SAASC,YAAYA,CAAA,EAAG;IACtB,MAAMC,IAAI,GAAG,WAAW;IACxB,MAAMC,OAAO,GAAGC,QAAQ,CAACC,MAAM,CAACC,KAAK,CAAC,GAAG,CAAC;IAC1C,KAAK,IAAID,MAAM,IAAIF,OAAO,EAAE;MAC1BE,MAAM,GAAGA,MAAM,CAACE,IAAI,CAAC,CAAC;MACtB,IAAIF,MAAM,CAACG,UAAU,CAACN,IAAI,GAAG,GAAG,CAAC,EAAE;QACjC,OAAOG,MAAM,CAACI,SAAS,CAACP,IAAI,CAACQ,MAAM,GAAG,CAAC,CAAC;MAC1C;IACF;IACA,OAAO,IAAI;EACb;EAEA,MAAMzB,iBAAiB,GAAG,MAAO0B,OAAO,IAAK;IAC3C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMzF,KAAK,CAAC0F,IAAI,CAC/B,mFAAmF,EACnF;QACE9B,IAAI,EAAE4B,OAAO;QACbG,gBAAgB,EAAEC,IAAI,CAACC,SAAS,CAACxE,eAAe,CAAC;QACjDyE,eAAe,EAAEF,IAAI,CAACC,SAAS,CAACtE,UAAU;MAC5C,CAAC,EACD;QACEwE,OAAO,EAAE;UACP,aAAa,EAAEjB,YAAY,CAAC;QAC9B,CAAC;QACDkB,eAAe,EAAE;MACnB,CACF,CAAC;MAED,MAAMC,MAAM,GAAGR,QAAQ,CAACS,IAAI,CAACC,MAAM,IAAI,qBAAqB;MAE5D,MAAMC,UAAU,GAAG;QAAExC,IAAI,EAAEqC,MAAM;QAAEpC,MAAM,EAAE;MAAM,CAAC;MAClDrD,WAAW,CAAE6F,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAED,UAAU,CAAC,CAAC;MAE5D,IAAI3F,YAAY,EAAE;QAChB6F,SAAS,CAACL,MAAM,CAAC;MACnB;IAEF,CAAC,CAAC,OAAO3C,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;IAC3D;EACF,CAAC;EAED,oBACEpD,OAAA;IAAKqG,SAAS,EAAC,iBAAiB;IAAAC,QAAA,gBAC9BtG,OAAA;MAAKqG,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BtG,OAAA;QAAQqG,SAAS,EAAC,UAAU;QAACE,OAAO,EAAEvC,iBAAkB;QAAAsC,QAAA,eACtDtG,OAAA;UAAKwG,GAAG,EAAE3G,OAAQ;UAAC4G,GAAG,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAGL9F,iBAAiB,iBAChBf,OAAA;MAAKqG,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtG,OAAA;QAAAsG,QAAA,EAAI;MAAiB;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC1B7G,OAAA;QAAKqG,SAAS,EAAC,aAAa;QAAAC,QAAA,EACzBrF,OAAO,CAAC6F,GAAG,CAAC,CAACC,MAAM,EAAE7C,KAAK,kBACzBlE,OAAA;UAEEuG,OAAO,EAAEA,CAAA,KAAMlC,qBAAqB,CAACH,KAAK,CAAE,CAAC;UAAA;UAC7CmC,SAAS,EAAE,iBAAiBxE,aAAa,CAACqC,KAAK,CAAC,GAAG,UAAU,GAAG,EAAE,EAAG;UAAAoC,QAAA,EAEpES;QAAM,GAJF7C,KAAK;UAAAwC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKJ,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACN7G,OAAA;QAAQuG,OAAO,EAAEvC,iBAAkB;QAACqC,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9E,CACN,eAED7G,OAAA;MAAKqG,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAClCtG,OAAA,CAACgH,OAAO;QACN/F,OAAO,EAAEA,OAAQ;QACjBuD,qBAAqB,EAAEA,qBAAsB;QAC7CnC,MAAM,EAAEA,MAAO;QACfC,SAAS,EAAEA,SAAU;QACrBe,4BAA4B,EAAEA,4BAA6B;QAC3DlB,WAAW,EAAEA;MAAY;QAAAuE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAEN7G,OAAA;MAAKqG,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BtG,OAAA;QAAQqG,SAAS,EAAC,YAAY;QAAAC,QAAA,eAC5BtG,OAAA;UAAKwG,GAAG,EAAE5G,SAAU;UAAC6G,GAAG,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAEN7G,OAAA;MAAKqG,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACrCtG,OAAA,CAACiH,kBAAkB;QAAC5G,QAAQ,EAAEA;MAAS;QAAAqG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eAEN7G,OAAA;MAAKqG,SAAS,EAAC,qBAAqB;MAAAC,QAAA,eAClCtG,OAAA,CAACkH,YAAY;QACXC,cAAc,EAAGlF,MAAM,IAAK;UAC1B,MAAMwB,UAAU,GAAG;YAAEC,IAAI,EAAEzB,MAAM;YAAE0B,MAAM,EAAE;UAAK,CAAC;UACjDrD,WAAW,CAAC,CAAC,GAAGD,QAAQ,EAAEoD,UAAU,CAAC,CAAC;UACtCG,iBAAiB,CAAC3B,MAAM,CAAC;QAC3B,CAAE;QACFmF,YAAY,EAAGC,IAAI,IAAKlE,OAAO,CAACmE,GAAG,CAAC,gBAAgB,EAAED,IAAI,CAACxC,IAAI,CAAE;QACjE0C,kBAAkB,EAAEA,CAAA,KAAMC,SAAS,CAACC,SAAS,CAACC,SAAS,CAACrH,QAAQ,CAACyG,GAAG,CAACa,CAAC,IAAIA,CAAC,CAACjE,IAAI,CAAC,CAACkE,IAAI,CAAC,IAAI,CAAC;MAAE;QAAAlB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/F;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAGLtF,aAAa,iBACZvB,OAAA;MAAKqG,SAAS,EAAC,SAAS;MAAAC,QAAA,eACtBtG,OAAA;QAAKqG,SAAS,EAAC,YAAY;QAAAC,QAAA,gBACzBtG,OAAA;UAAAsG,QAAA,EAAI;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACpB7G,OAAA;UACE6H,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEnG,aAAc;UACrBoG,QAAQ,EAAGC,CAAC,IAAKpG,gBAAgB,CAACoG,CAAC,CAACC,MAAM,CAACH,KAAK;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACF7G,OAAA;UAAQuG,OAAO,EAAE9B,oBAAqB;UAAA6B,QAAA,EAAC;QAAI;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpD7G,OAAA;UAAQuG,OAAO,EAAEA,CAAA,KAAM/E,gBAAgB,CAAC,KAAK,CAAE;UAAA8E,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAEA;AAAAzG,EAAA,CA3OSD,kBAAkB;AAAA+H,EAAA,GAAlB/H,kBAAkB;AA4O3B,SAAS6G,OAAOA,CAAC;EACf/F,OAAO;EACPuD,qBAAqB;EACrBnC,MAAM;EACNC,SAAS;EACTe,4BAA4B;EAC5BlB;AACF,CAAC,EAAE;EAAAgG,GAAA;EACD,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG5I,QAAQ,CAAC,SAAS,CAAC;EACzD,MAAM6I,OAAO,GAAG,CAAC,gBAAgB,EAAE,oBAAoB,EAAE,eAAe,EAAE,gBAAgB,EAAE,qBAAqB,CAAC;EAClH,MAAM,CAACC,kBAAkB,EAAEC,qBAAqB,CAAC,GAAG/I,QAAQ,CAAC,CAAC,CAAC;EAC/D,MAAM,CAACc,YAAY,EAAEkI,eAAe,CAAC,GAAGhJ,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMsE,SAAS,GAAGA,CAAA,KAAM;IACtB0E,eAAe,CAAEC,IAAI,IAAK,CAACA,IAAI,CAAC;EAClC,CAAC;EAED,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;IAC/BN,cAAc,CAACC,OAAO,CAACC,kBAAkB,CAAC,CAAC;EAC7C,CAAC;EAED,MAAMK,UAAU,GAAGA,CAAA,KAAM;IACvBP,cAAc,CAAC,SAAS,CAAC;EAC3B,CAAC;EAED,MAAMQ,YAAY,GAAIC,SAAS,IAAK;IAClC,IAAIA,SAAS,KAAK,IAAI,EAAE;MACtBN,qBAAqB,CAAEE,IAAI,IAAMA,IAAI,KAAK,CAAC,GAAGJ,OAAO,CAACjD,MAAM,GAAG,CAAC,GAAGqD,IAAI,GAAG,CAAE,CAAC;IAC/E,CAAC,MAAM;MACLF,qBAAqB,CAAEE,IAAI,IAAMA,IAAI,KAAKJ,OAAO,CAACjD,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGqD,IAAI,GAAG,CAAE,CAAC;IAC/E;EACF,CAAC;EAED,oBACE1I,OAAA;IAAKqG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAC/B8B,WAAW,KAAK,SAAS,gBACxBpI,OAAA;MAAKqG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtG,OAAA;QAAKqG,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BgC,OAAO,CAACC,kBAAkB;MAAC;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzB,CAAC,eACN7G,OAAA;QAAKqG,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BtG,OAAA;UAAQuG,OAAO,EAAEA,CAAA,KAAMsC,YAAY,CAAC,IAAI,CAAE;UAACxC,SAAS,EAAC,UAAU;UAAAC,QAAA,EAAC;QAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1E7G,OAAA;UAAQuG,OAAO,EAAEoC,kBAAmB;UAACtC,SAAS,EAAC,eAAe;UAAAC,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC9E7G,OAAA;UAAQuG,OAAO,EAAEA,CAAA,KAAMsC,YAAY,CAAC,MAAM,CAAE;UAACxC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAC;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3E,CAAC,eAEN7G,OAAA;QAAKqG,SAAS,EAAC,yBAAyB;QAAAC,QAAA,gBACtCtG,OAAA;UAAMqG,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eACjD7G,OAAA;UACE6H,IAAI,EAAC,OAAO;UACZxB,SAAS,EAAC,eAAe;UACzB0C,GAAG,EAAC,GAAG;UACPC,GAAG,EAAC,KAAK;UACTlB,KAAK,EAAEzF,MAAO;UACd0F,QAAQ,EAAGC,CAAC,IAAK1F,SAAS,CAAC2G,MAAM,CAACjB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;QAAE;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC,eACF7G,OAAA;UAAMqG,SAAS,EAAC,cAAc;UAAAC,QAAA,GAAC,GAAC,EAACjE,MAAM;QAAA;UAAAqE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,gBAEN7G,OAAA;MAAKqG,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtG,OAAA;QAAAsG,QAAA,EAAK8B;MAAW;QAAA1B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtB7G,OAAA;QAAKqG,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GACnC8B,WAAW,KAAK,gBAAgB,iBAC/BpI,OAAA,CAAAE,SAAA;UAAAoG,QAAA,gBACEtG,OAAA;YAAAsG,QAAA,EAAG;UAAiC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACxC7G,OAAA;YACEuG,OAAO,EAAExC,SAAU;YACnBsC,SAAS,EAAE,cAAc9F,YAAY,GAAG,aAAa,GAAG,cAAc,EAAG;YAAA+F,QAAA,EAExE/F,YAAY,GAAG,aAAa,GAAG;UAAY;YAAAmG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CAAC,eAET7G,OAAA;YAAKqG,SAAS,EAAC,yBAAyB;YAAAC,QAAA,gBACtCtG,OAAA;cAAMqG,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAC;YAAW;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACjD7G,OAAA;cACE6H,IAAI,EAAC,OAAO;cACZxB,SAAS,EAAC,eAAe;cACzB0C,GAAG,EAAC,GAAG;cACPC,GAAG,EAAC,KAAK;cACTlB,KAAK,EAAEzF,MAAO;cACd0F,QAAQ,EAAGC,CAAC,IAAK1F,SAAS,CAAC2G,MAAM,CAACjB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;YAAE;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpD,CAAC,eACF7G,OAAA;cAAMqG,SAAS,EAAC,cAAc;cAAAC,QAAA,GAAC,GAAC,EAACjE,MAAM;YAAA;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA,eACN,CACH,EACAuB,WAAW,KAAK,oBAAoB,iBACnCpI,OAAA,CAAAE,SAAA;UAAAoG,QAAA,gBACEtG,OAAA;YAAAsG,QAAA,EAAG;UAA2B;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAClC7G,OAAA;YACEuG,OAAO,EAAElD,4BAA6B;YACtCgD,SAAS,EAAE,iBAAiBlE,WAAW,GAAG,WAAW,GAAG,EAAE,EAAG;YAAAmE,QAAA,EAE5DnE,WAAW,GAAG,MAAM,GAAG;UAAmB;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC,CAAC;QAAA,eACT,CACH,EACAuB,WAAW,KAAK,eAAe,iBAC9BpI,OAAA,CAAAE,SAAA;UAAAoG,QAAA,gBACEtG,OAAA;YAAAsG,QAAA,EAAG;UAAsB;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eAC7B7G,OAAA;YAAQqG,SAAS,EAAC,cAAc;YAAAC,QAAA,gBAC9BtG,OAAA;cAAAsG,QAAA,EAAQ;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACxB7G,OAAA;cAAAsG,QAAA,EAAQ;YAAa;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eAC9B7G,OAAA;cAAAsG,QAAA,EAAQ;YAAgB;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC3B,CAAC;QAAA,eACT,CACH,EACAuB,WAAW,KAAK,gBAAgB,iBAC/BpI,OAAA;UAAKqG,SAAS,EAAC,aAAa;UAAAC,QAAA,EACzBrF,OAAO,CAAC6F,GAAG,CAAC,CAACC,MAAM,EAAE7C,KAAK,kBACzBlE,OAAA;YAAoBqG,SAAS,EAAC,eAAe;YAACE,OAAO,EAAEA,CAAA,KAAM/B,qBAAqB,CAACN,KAAK,CAAE;YAAAoC,QAAA,EACvFS;UAAM,GADI7C,KAAK;YAAAwC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EACAuB,WAAW,KAAK,qBAAqB,iBACpCpI,OAAA,CAAAE,SAAA;UAAAoG,QAAA,gBACEtG,OAAA;YAAAsG,QAAA,EAAG;UAAgC;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CAAC,eACvC7G,OAAA;YAAKqG,SAAS,EAAC,sBAAsB;YAAAC,QAAA,EAClC,CAAC,GAAGvE,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC+E,GAAG,CAAC,CAACoC,CAAC,EAAEhF,KAAK,kBAC3BlE,OAAA;cAAiBqG,SAAS,EAAC,mBAAmB;cAAAC,QAAA,GAAC,eAChC,EAACpC,KAAK,GAAG,CAAC;YAAA,GADfA,KAAK;cAAAwC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,eACN,CACH;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eACN7G,OAAA;QAAQuG,OAAO,EAAEqC,UAAW;QAACvC,SAAS,EAAC,aAAa;QAAAC,QAAA,EAAC;MAAI;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;;AAEA;AAAAsB,GAAA,CAzISnB,OAAO;AAAAmC,GAAA,GAAPnC,OAAO;AA0IhB,SAASC,kBAAkBA,CAAC;EAAE5G;AAAS,CAAC,EAAE;EAAA+I,GAAA;EACxC,MAAMC,eAAe,GAAG1J,MAAM,CAAC,IAAI,CAAC;EAEpCD,SAAS,CAAC,MAAM;IACd,IAAI2J,eAAe,CAACC,OAAO,EAAE;MAC3BD,eAAe,CAACC,OAAO,CAACC,SAAS,GAAGF,eAAe,CAACC,OAAO,CAACE,YAAY;IAC1E;EACF,CAAC,EAAE,CAACnJ,QAAQ,CAAC,CAAC;EAEd,oBACEL,OAAA;IAAKqG,SAAS,EAAC,qBAAqB;IAACoD,GAAG,EAAEJ,eAAgB;IAAA/C,QAAA,EACvDjG,QAAQ,CAACyG,GAAG,CAAC,CAACxB,OAAO,EAAEpB,KAAK,kBAC3BlE,OAAA;MAAiBqG,SAAS,EAAE,kBAAkBf,OAAO,CAAC3B,MAAM,GAAG,cAAc,GAAG,YAAY,EAAG;MAAA2C,QAAA,eAC7FtG,OAAA;QAAAsG,QAAA,EAAIhB,OAAO,CAAC5B;MAAI;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC,GADb3C,KAAK;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEV,CACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;;AAEA;AAAAuC,GAAA,CApBSnC,kBAAkB;AAAAyC,GAAA,GAAlBzC,kBAAkB;AAqB3B,SAASb,SAASA,CAAC1C,IAAI,EAAE;EACvB,IAAI,iBAAiB,IAAIlB,MAAM,EAAE;IAC/B,MAAMmH,SAAS,GAAG,IAAIC,wBAAwB,CAAClG,IAAI,CAAC;IACpDiG,SAAS,CAACE,IAAI,GAAG,CAAC,CAAC,CAAC;IACpBrH,MAAM,CAACsH,eAAe,CAACC,KAAK,CAACJ,SAAS,CAAC;EACzC,CAAC,MAAM;IACLxG,OAAO,CAAC6G,IAAI,CAAC,mCAAmC,CAAC;EACnD;AACF;;AAEA;AACA,SAAS9C,YAAYA,CAAC;EAAEC,cAAc;EAAEC,YAAY;EAAEG;AAAmB,CAAC,EAAE;EAAA0C,GAAA;EAC1E,MAAM,CAAChI,MAAM,EAAEC,SAAS,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMyK,iBAAiB,GAAIlC,CAAC,IAAK;IAC/B9F,SAAS,CAAC8F,CAAC,CAACC,MAAM,CAACH,KAAK,CAAC;IACzBE,CAAC,CAACC,MAAM,CAACkC,KAAK,CAACC,MAAM,GAAG,MAAM;IAC9BpC,CAAC,CAACC,MAAM,CAACkC,KAAK,CAACC,MAAM,GAAG,GAAGpC,CAAC,CAACC,MAAM,CAACuB,YAAY,IAAI;EACtD,CAAC;EAED,MAAMa,gBAAgB,GAAIrC,CAAC,IAAK;IAC9B,IAAIA,CAAC,CAACC,MAAM,CAACqC,KAAK,CAACjF,MAAM,GAAG,CAAC,EAAE;MAC7B+B,YAAY,CAACY,CAAC,CAACC,MAAM,CAACqC,KAAK,CAAC,CAAC,CAAC,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,UAAU,GAAIvC,CAAC,IAAK;IACxB,IAAI/F,MAAM,KAAK,EAAE,EAAE;MACjB+F,CAAC,CAACC,MAAM,CAACkC,KAAK,CAACC,MAAM,GAAG,MAAM;IAChC;EACF,CAAC;EAED,oBACEpK,OAAA;IAAKqG,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BtG,OAAA;MACE8H,KAAK,EAAE7F,MAAO;MACd8F,QAAQ,EAAEmC,iBAAkB;MAC5BM,MAAM,EAAED,UAAW;MACnBlE,SAAS,EAAC,cAAc;MACxBoE,WAAW,EAAC,2BAA2B;MACvCC,IAAI,EAAE,CAAE;MACRP,KAAK,EAAE;QAAEC,MAAM,EAAE;MAAO;IAAE;MAAA1D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B,CAAC,eACF7G,OAAA;MAAQuG,OAAO,EAAEA,CAAA,KAAMY,cAAc,CAAClF,MAAM,CAAE;MAAAqE,QAAA,EAAC;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC9D7G,OAAA;MAAQuG,OAAO,EAAEgB,kBAAmB;MAAAjB,QAAA,EAAC;IAAiB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC/D7G,OAAA;MAAQuG,OAAO,EAAEA,CAAA,KAAMxB,QAAQ,CAAC4F,cAAc,CAAC,aAAa,CAAC,CAACC,KAAK,CAAC,CAAE;MAAAtE,QAAA,EAAC;IAAW;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC3F7G,OAAA;MAAO6H,IAAI,EAAC,MAAM;MAACgD,EAAE,EAAC,aAAa;MAACV,KAAK,EAAE;QAAEW,OAAO,EAAE;MAAO,CAAE;MAAC/C,QAAQ,EAAEsC;IAAiB;MAAA3D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3F,CAAC;AAEV;AAACoD,GAAA,CAtCQ/C,YAAY;AAAA6D,GAAA,GAAZ7D,YAAY;AAwCrB,eAAe/G,kBAAkB;AAAC,IAAA+H,EAAA,EAAAiB,GAAA,EAAAO,GAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAA9C,EAAA;AAAA8C,YAAA,CAAA7B,GAAA;AAAA6B,YAAA,CAAAtB,GAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}