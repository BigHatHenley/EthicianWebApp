{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hat\\\\Documents\\\\Work Stuff\\\\EthicianWebApp\\\\ReactFrontend\\\\src\\\\components\\\\MultiChatXpertPage.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './MultiChatXpertPage.css';\nimport userImage from './images/Chips.png';\nimport aiImage from './images/BreachHours.jpg';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MultiChatXpertPage() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [experts, setExperts] = useState([\"Expert 1\", \"Expert 2\", \"Expert 3\", \"Expert 4\", \"Expert 5\", \"Expert 6\", \"Expert 7\", \"Expert 8\", \"Expert 9\", \"Expert 10\", \"Expert 11\", \"Expert 12\", \"Expert 13\", \"Expert 14\", \"Expert 15\"]);\n  const [expertStatus, setExpertStatus] = useState(Array(15).fill(false)); // Tracks toggle state for AI Image Popup\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\n  const [currentLLM, setCurrentLLM] = useState(null);\n\n  // Toggle expert selection in AI Image Popup\n  const toggleExpert = index => {\n    const updatedStatus = [...expertStatus];\n    updatedStatus[index] = !updatedStatus[index];\n    setExpertStatus(updatedStatus);\n  };\n\n  // Toggle the AI Expert Popup\n  const toggleExpertPopup = () => {\n    setExpertPopupOpen(!isExpertPopupOpen);\n  };\n\n  // Function to handle updating an expert's name in the settings console\n  const updateExpertName = (index, newName) => {\n    const updatedExperts = [...experts];\n    updatedExperts[index] = newName;\n    setExperts(updatedExperts);\n  };\n  function getCsrfToken() {\n    const name = 'csrftoken';\n    const cookies = document.cookie.split(';');\n    for (let cookie of cookies) {\n      cookie = cookie.trim();\n      if (cookie.startsWith(name + '=')) {\n        return cookie.substring(name.length + 1);\n      }\n    }\n    return null;\n  }\n  const handleSendMessage = async message => {\n    try {\n      const response = await axios.post('https://bada-2601-702-0-9480-e902-94e6-a4ed-8872.ngrok-free.app/api/analyze_text/', {\n        text: message,\n        selected_experts: expertStatus,\n        // Send the expert toggled status\n        selected_option: currentLLM // LLM option\n      }, {\n        headers: {\n          'X-CSRFToken': getCsrfToken()\n        },\n        withCredentials: true\n      });\n      const aiText = response.data.output || \"No response from AI\";\n      setMessages(prevMessages => [...prevMessages, {\n        text: aiText,\n        isUser: false\n      }]);\n    } catch (error) {\n      console.error('Error sending message to backend:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"my-ui-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"ai-image\",\n        onClick: toggleExpertPopup,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: aiImage,\n          alt: \"AI Expert\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), isExpertPopupOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expert-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Available Experts\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"expert-grid\",\n        children: experts.map((expert, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `expert-toggle-button ${expertStatus[index] ? 'selected' : ''}`,\n          onClick: () => toggleExpert(index),\n          children: expert\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleExpertPopup,\n        className: \"close-popup-button\",\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"console-container\",\n      children: /*#__PURE__*/_jsxDEV(Console, {\n        experts: experts,\n        updateExpertName: updateExpertName,\n        setCurrentLLM: setCurrentLLM\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"conversation-container\",\n      children: /*#__PURE__*/_jsxDEV(ConversationWindow, {\n        messages: messages\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"entry-box-container\",\n      children: /*#__PURE__*/_jsxDEV(InputSection, {\n        onPromptSubmit: prompt => {\n          setMessages([...messages, {\n            text: prompt,\n            isUser: true\n          }]);\n          handleSendMessage(prompt);\n        },\n        onCopyConversation: () => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n// Console Component with Option Cycling and Editable Experts\n_s(MultiChatXpertPage, \"kNVFYekl+fE6DYpv4LFHxChcu4Q=\");\n_c = MultiChatXpertPage;\nfunction Console({\n  experts,\n  updateExpertName,\n  setCurrentLLM\n}) {\n  _s2();\n  const [currentView, setCurrentView] = useState(\"default\");\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation Select\"];\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\n  const [selectedExpertIndex, setSelectedExpertIndex] = useState(null);\n  const [newExpertName, setNewExpertName] = useState(\"\");\n  const handleSelectOption = () => setCurrentView(options[currentOptionIndex]);\n  const handleBack = () => setCurrentView(\"default\");\n  const handleScroll = direction => setCurrentOptionIndex(prev => direction === 'up' ? prev === 0 ? options.length - 1 : prev - 1 : prev === options.length - 1 ? 0 : prev + 1);\n  const startEditingExpert = index => {\n    setSelectedExpertIndex(index);\n    setNewExpertName(experts[index]);\n  };\n  const saveExpertName = () => {\n    updateExpertName(selectedExpertIndex, newExpertName);\n    setSelectedExpertIndex(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"console-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-display\",\n      children: currentView === \"default\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"console-option\",\n        children: options[currentOptionIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-options\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"settings-page-content\",\n          children: [currentView === \"Text-To-Speech\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Enable or disable Text-to-Speech:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Enable TTS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Disable TTS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), currentView === \"Speech Recognition\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Control Speech Recognition:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Record Speech\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Check Recording\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), currentView === \"LLM Selection\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select Language Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              onChange: e => setCurrentLLM(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"ChatGPT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Google Gemini\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                children: \"Anthropic Claude\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true), currentView === \"Update Experts\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"experts-grid\",\n            children: [experts.map((expert, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"expert-button\",\n              onClick: () => startEditingExpert(index),\n              children: expert\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 21\n            }, this)), selectedExpertIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"expert-edit-popup\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newExpertName,\n                onChange: e => setNewExpertName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: saveExpertName,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }, this), currentView === \"Conversation Select\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Select a conversation to review:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"conversation-history\",\n              children: [...Array(10)].map((_, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"conversation-item\",\n                children: [\"Conversation \", index + 1]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 23\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          className: \"back-button\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleScroll('up'),\n        className: \"up-arrow\",\n        children: \"\\u25B2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSelectOption,\n        className: \"select-button\",\n        children: \"Select\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleScroll('down'),\n        className: \"down-arrow\",\n        children: \"\\u25BC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n}\n\n// ConversationWindow Component\n_s2(Console, \"PXNzwwjeBOTAcYiEVRKmZJ2FWyI=\");\n_c2 = Console;\nfunction ConversationWindow({\n  messages\n}) {\n  _s3();\n  const conversationRef = useRef(null);\n\n  // Auto-scroll to the bottom of the conversation when new messages are added\n  useEffect(() => {\n    if (conversationRef.current) {\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\n    }\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"conversation-window\",\n    ref: conversationRef,\n    children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 11\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n}\n\n// InputSection Component with Expanding Entry Box\n_s3(ConversationWindow, \"Y7nFwtZO/hlnq7te7GKq0r5Z7DM=\");\n_c3 = ConversationWindow;\nfunction InputSection({\n  onPromptSubmit,\n  onCopyConversation\n}) {\n  _s4();\n  const [prompt, setPrompt] = useState(\"\");\n  const handleInputChange = e => {\n    setPrompt(e.target.value);\n    e.target.style.height = \"auto\"; // Reset height to auto to calculate new height\n    if (e.target.scrollHeight > e.target.clientHeight) {\n      e.target.style.height = `${e.target.scrollHeight}px`; // Expand based on content\n    }\n  };\n  const handleBlur = e => {\n    if (prompt === \"\") {\n      e.target.style.height = \"20px\"; // Only shrink to 20px if there's no content\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"input-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: prompt,\n      onChange: handleInputChange,\n      onBlur: handleBlur,\n      className: \"prompt-input\",\n      placeholder: \"Type your message here...\",\n      rows: 1,\n      style: {\n        height: \"20px\"\n      } // Set default height to 20px\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => onPromptSubmit(prompt),\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onCopyConversation,\n      children: \"Copy Conversation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 260,\n    columnNumber: 5\n  }, this);\n}\n_s4(InputSection, \"aktPPfsqt7fI0SQCfTqjxGF+A+w=\");\n_c4 = InputSection;\nexport default MultiChatXpertPage;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MultiChatXpertPage\");\n$RefreshReg$(_c2, \"Console\");\n$RefreshReg$(_c3, \"ConversationWindow\");\n$RefreshReg$(_c4, \"InputSection\");","map":{"version":3,"names":["React","useState","useEffect","useRef","userImage","aiImage","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","MultiChatXpertPage","_s","messages","setMessages","experts","setExperts","expertStatus","setExpertStatus","Array","fill","isExpertPopupOpen","setExpertPopupOpen","currentLLM","setCurrentLLM","toggleExpert","index","updatedStatus","toggleExpertPopup","updateExpertName","newName","updatedExperts","getCsrfToken","name","cookies","document","cookie","split","trim","startsWith","substring","length","handleSendMessage","message","response","post","text","selected_experts","selected_option","headers","withCredentials","aiText","data","output","prevMessages","isUser","error","console","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","expert","Console","ConversationWindow","InputSection","onPromptSubmit","prompt","onCopyConversation","navigator","clipboard","writeText","m","join","_c","_s2","currentView","setCurrentView","options","currentOptionIndex","setCurrentOptionIndex","selectedExpertIndex","setSelectedExpertIndex","newExpertName","setNewExpertName","handleSelectOption","handleBack","handleScroll","direction","prev","startEditingExpert","saveExpertName","onChange","e","target","value","type","_","_c2","_s3","conversationRef","current","scrollTop","scrollHeight","ref","_c3","_s4","setPrompt","handleInputChange","style","height","clientHeight","handleBlur","onBlur","placeholder","rows","_c4","$RefreshReg$"],"sources":["C:/Users/Hat/Documents/Work Stuff/EthicianWebApp/ReactFrontend/src/components/MultiChatXpertPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport './MultiChatXpertPage.css';\r\nimport userImage from './images/Chips.png';\r\nimport aiImage from './images/BreachHours.jpg';\r\nimport axios from 'axios';\r\n\r\nfunction MultiChatXpertPage() {\r\n  const [messages, setMessages] = useState([]);\r\n  const [experts, setExperts] = useState([\r\n    \"Expert 1\", \"Expert 2\", \"Expert 3\", \"Expert 4\", \"Expert 5\",\r\n    \"Expert 6\", \"Expert 7\", \"Expert 8\", \"Expert 9\", \"Expert 10\",\r\n    \"Expert 11\", \"Expert 12\", \"Expert 13\", \"Expert 14\", \"Expert 15\"\r\n  ]);\r\n  const [expertStatus, setExpertStatus] = useState(Array(15).fill(false)); // Tracks toggle state for AI Image Popup\r\n  const [isExpertPopupOpen, setExpertPopupOpen] = useState(false);\r\n  const [currentLLM, setCurrentLLM] = useState(null);\r\n\r\n  // Toggle expert selection in AI Image Popup\r\n  const toggleExpert = (index) => {\r\n    const updatedStatus = [...expertStatus];\r\n    updatedStatus[index] = !updatedStatus[index];\r\n    setExpertStatus(updatedStatus);\r\n  };\r\n\r\n  // Toggle the AI Expert Popup\r\n  const toggleExpertPopup = () => {\r\n    setExpertPopupOpen(!isExpertPopupOpen);\r\n  };\r\n\r\n  // Function to handle updating an expert's name in the settings console\r\n  const updateExpertName = (index, newName) => {\r\n    const updatedExperts = [...experts];\r\n    updatedExperts[index] = newName;\r\n    setExperts(updatedExperts);\r\n  };\r\n\r\n  function getCsrfToken() {\r\n    const name = 'csrftoken';\r\n    const cookies = document.cookie.split(';');\r\n    for (let cookie of cookies) {\r\n      cookie = cookie.trim();\r\n      if (cookie.startsWith(name + '=')) {\r\n        return cookie.substring(name.length + 1);\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n  const handleSendMessage = async (message) => {\r\n    try {\r\n      const response = await axios.post(\r\n        'https://bada-2601-702-0-9480-e902-94e6-a4ed-8872.ngrok-free.app/api/analyze_text/',\r\n        {\r\n          text: message,\r\n          selected_experts: expertStatus,  // Send the expert toggled status\r\n          selected_option: currentLLM      // LLM option\r\n        },\r\n        {\r\n          headers: { 'X-CSRFToken': getCsrfToken() },\r\n          withCredentials: true\r\n        }\r\n      );\r\n      const aiText = response.data.output || \"No response from AI\";\r\n      setMessages((prevMessages) => [...prevMessages, { text: aiText, isUser: false }]);\r\n    } catch (error) {\r\n      console.error('Error sending message to backend:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"my-ui-container\">\r\n      {/* AI Image Container */}\r\n      <div className=\"ai-container\">\r\n        <button className=\"ai-image\" onClick={toggleExpertPopup}>\r\n          <img src={aiImage} alt=\"AI Expert\" />\r\n        </button>\r\n      </div>\r\n\r\n      {/* AI Expert Popup with Toggle Functionality */}\r\n      {isExpertPopupOpen && (\r\n        <div className=\"expert-popup\">\r\n          <h4>Available Experts</h4>\r\n          <div className=\"expert-grid\">\r\n            {experts.map((expert, index) => (\r\n              <button\r\n                key={index}\r\n                className={`expert-toggle-button ${expertStatus[index] ? 'selected' : ''}`}\r\n                onClick={() => toggleExpert(index)}\r\n              >\r\n                {expert}\r\n              </button>\r\n            ))}\r\n          </div>\r\n          <button onClick={toggleExpertPopup} className=\"close-popup-button\">Close</button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Console Container with Editable Experts */}\r\n      <div className=\"console-container\">\r\n        <Console experts={experts} updateExpertName={updateExpertName} setCurrentLLM={setCurrentLLM} />\r\n      </div>\r\n\r\n      {/* Conversation Window Container */}\r\n      <div className=\"conversation-container\">\r\n        <ConversationWindow messages={messages} />\r\n      </div>\r\n\r\n      {/* Input Section */}\r\n      <div className=\"entry-box-container\">\r\n        <InputSection\r\n          onPromptSubmit={(prompt) => {\r\n            setMessages([...messages, { text: prompt, isUser: true }]);\r\n            handleSendMessage(prompt);\r\n          }}\r\n          onCopyConversation={() => navigator.clipboard.writeText(messages.map(m => m.text).join('\\n'))}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Console Component with Option Cycling and Editable Experts\r\nfunction Console({ experts, updateExpertName, setCurrentLLM }) {\r\n  const [currentView, setCurrentView] = useState(\"default\");\r\n  const options = [\"Text-To-Speech\", \"Speech Recognition\", \"LLM Selection\", \"Update Experts\", \"Conversation Select\"];\r\n  const [currentOptionIndex, setCurrentOptionIndex] = useState(0);\r\n  const [selectedExpertIndex, setSelectedExpertIndex] = useState(null);\r\n  const [newExpertName, setNewExpertName] = useState(\"\");\r\n\r\n  const handleSelectOption = () => setCurrentView(options[currentOptionIndex]);\r\n  const handleBack = () => setCurrentView(\"default\");\r\n  const handleScroll = (direction) => setCurrentOptionIndex((prev) => (direction === 'up' ? (prev === 0 ? options.length - 1 : prev - 1) : (prev === options.length - 1 ? 0 : prev + 1)));\r\n  const startEditingExpert = (index) => {\r\n    setSelectedExpertIndex(index);\r\n    setNewExpertName(experts[index]);\r\n  };\r\n  const saveExpertName = () => {\r\n    updateExpertName(selectedExpertIndex, newExpertName);\r\n    setSelectedExpertIndex(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"console-grid\">\r\n      <div className=\"settings-display\">\r\n        {currentView === \"default\" ? (\r\n          <div className=\"console-option\">\r\n            {options[currentOptionIndex]}\r\n          </div>\r\n        ) : (\r\n          <div className=\"settings-options\">\r\n            <h3>{currentView}</h3>\r\n            <div className=\"settings-page-content\">\r\n              {currentView === \"Text-To-Speech\" && (\r\n                <>\r\n                  <p>Enable or disable Text-to-Speech:</p>\r\n                  <button>Enable TTS</button>\r\n                  <button>Disable TTS</button>\r\n                </>\r\n              )}\r\n              {currentView === \"Speech Recognition\" && (\r\n                <>\r\n                  <p>Control Speech Recognition:</p>\r\n                  <button>Record Speech</button>\r\n                  <button>Check Recording</button>\r\n                </>\r\n              )}\r\n              {currentView === \"LLM Selection\" && (\r\n                <>\r\n                  <p>Select Language Model:</p>\r\n                  <select onChange={(e) => setCurrentLLM(e.target.value)}>\r\n                    <option>ChatGPT</option>\r\n                    <option>Google Gemini</option>\r\n                    <option>Anthropic Claude</option>\r\n                  </select>\r\n                </>\r\n              )}\r\n              {currentView === \"Update Experts\" && (\r\n                <div className=\"experts-grid\">\r\n                  {experts.map((expert, index) => (\r\n                    <button key={index} className=\"expert-button\" onClick={() => startEditingExpert(index)}>\r\n                      {expert}\r\n                    </button>\r\n                  ))}\r\n                  {selectedExpertIndex !== null && (\r\n                    <div className=\"expert-edit-popup\">\r\n                      <input type=\"text\" value={newExpertName} onChange={(e) => setNewExpertName(e.target.value)} />\r\n                      <button onClick={saveExpertName}>Save</button>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              )}\r\n              {currentView === \"Conversation Select\" && (\r\n                <>\r\n                  <p>Select a conversation to review:</p>\r\n                  <div className=\"conversation-history\">\r\n                    {[...Array(10)].map((_, index) => (\r\n                      <div key={index} className=\"conversation-item\">\r\n                        Conversation {index + 1}\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </>\r\n              )}\r\n            </div>\r\n            <button onClick={handleBack} className=\"back-button\">Back</button>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"settings-buttons\">\r\n        <button onClick={() => handleScroll('up')} className=\"up-arrow\">▲</button>\r\n        <button onClick={handleSelectOption} className=\"select-button\">Select</button>\r\n        <button onClick={() => handleScroll('down')} className=\"down-arrow\">▼</button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\n// ConversationWindow Component\r\nfunction ConversationWindow({ messages }) {\r\n  const conversationRef = useRef(null);\r\n\r\n  // Auto-scroll to the bottom of the conversation when new messages are added\r\n  useEffect(() => {\r\n    if (conversationRef.current) {\r\n      conversationRef.current.scrollTop = conversationRef.current.scrollHeight;\r\n    }\r\n  }, [messages]);\r\n\r\n  return (\r\n    <div className=\"conversation-window\" ref={conversationRef}>\r\n      {messages.map((message, index) => (\r\n        <div key={index} className={`message-bubble ${message.isUser ? 'user-message' : 'ai-message'}`}>\r\n          <p>{message.text}</p>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n// InputSection Component with Expanding Entry Box\r\nfunction InputSection({ onPromptSubmit, onCopyConversation }) {\r\n  const [prompt, setPrompt] = useState(\"\");\r\n\r\n  const handleInputChange = (e) => {\r\n    setPrompt(e.target.value);\r\n    e.target.style.height = \"auto\";  // Reset height to auto to calculate new height\r\n    if (e.target.scrollHeight > e.target.clientHeight) {\r\n      e.target.style.height = `${e.target.scrollHeight}px`;  // Expand based on content\r\n    }\r\n  };\r\n\r\n  const handleBlur = (e) => {\r\n    if (prompt === \"\") {\r\n      e.target.style.height = \"20px\";  // Only shrink to 20px if there's no content\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"input-section\">\r\n      <textarea\r\n        value={prompt}\r\n        onChange={handleInputChange}\r\n        onBlur={handleBlur}\r\n        className=\"prompt-input\"\r\n        placeholder=\"Type your message here...\"\r\n        rows={1}\r\n        style={{ height: \"20px\" }}  // Set default height to 20px\r\n      />\r\n      <button onClick={() => onPromptSubmit(prompt)}>Submit</button>\r\n      <button onClick={onCopyConversation}>Copy Conversation</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MultiChatXpertPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}